# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  usr.sbin/IPXrouted usr.sbin/ac usr.sbin/accton usr.sbin/acpi usr.sbin/adduser usr.sbin/amd usr.sbin/ancontrol usr.sbin/apm usr.sbin/apmd usr.sbin/arp usr.sbin/asf usr.sbin/audit usr.sbin/auditd usr.sbin/auditreduce usr.sbin/authpf usr.sbin/bluetooth usr.sbin/boot0cfg usr.sbin/boot98cfg usr.sbin/bootparamd usr.sbin/bootpd usr.sbin/bsnmpd usr.sbin/btxld usr.sbin/burncd usr.sbin/cdcontrol usr.sbin/chkgrp usr.sbin/chown usr.sbin/chroot usr.sbin/ckdist usr.sbin/clear_locks usr.sbin/config usr.sbin/cpucontrol usr.sbin/crashinfo usr.sbin/cron usr.sbin/crunch usr.sbin/ctm usr.sbin/cxgbtool usr.sbin/daemon usr.sbin/dconschat usr.sbin/devinfo usr.sbin/digictl usr.sbin/diskinfo usr.sbin/dnssec-keygen usr.sbin/dnssec-signzone usr.sbin/dumpcis usr.sbin/editmap usr.sbin/edquota usr.sbin/eeprom usr.sbin/extattr usr.sbin/extattrctl usr.sbin/faithd usr.sbin/fdcontrol usr.sbin/fdformat usr.sbin/fdread usr.sbin/fdwrite usr.sbin/fifolog usr.sbin/flowctl usr.sbin/freebsd-update usr.sbin/ftp-proxy usr.sbin/fwcontrol usr.sbin/getfmac usr.sbin/getpmac usr.sbin/gssd usr.sbin/gstat usr.sbin/i2c usr.sbin/ifmcstat usr.sbin/inetd usr.sbin/iostat usr.sbin/ip6addrctl usr.sbin/ipfwpcap usr.sbin/jail usr.sbin/jexec usr.sbin/jls usr.sbin/kbdcontrol usr.sbin/kbdmap usr.sbin/kernbb usr.sbin/keyserv usr.sbin/kgmon usr.sbin/kgzip usr.sbin/kldxref usr.sbin/lastlogin usr.sbin/lmcconfig usr.sbin/lpr usr.sbin/lptcontrol usr.sbin/mailstats usr.sbin/mailwrapper usr.sbin/makefs usr.sbin/makemap usr.sbin/manctl usr.sbin/memcontrol usr.sbin/mergemaster usr.sbin/mixer usr.sbin/mld6query usr.sbin/mlxcontrol usr.sbin/mount_nwfs usr.sbin/mount_portalfs usr.sbin/mount_smbfs usr.sbin/mountd usr.sbin/moused usr.sbin/mptable usr.sbin/mtest usr.sbin/mtree usr.sbin/named usr.sbin/named-checkconf usr.sbin/named-checkzone usr.sbin/named.reload usr.sbin/ndiscvt usr.sbin/ndp usr.sbin/newsyslog usr.sbin/nfsd usr.sbin/ngctl usr.sbin/nghook usr.sbin/nologin usr.sbin/nscd usr.sbin/ntp usr.sbin/nvram usr.sbin/ofwdump usr.sbin/pciconf usr.sbin/periodic usr.sbin/pkg_install usr.sbin/pmcannotate usr.sbin/pmccontrol usr.sbin/pmcstat usr.sbin/pnpinfo usr.sbin/portsnap usr.sbin/powerd usr.sbin/ppp usr.sbin/pppctl usr.sbin/pppd usr.sbin/pppstats usr.sbin/praliases usr.sbin/praudit usr.sbin/procctl usr.sbin/pstat usr.sbin/pw usr.sbin/pwd_mkdb usr.sbin/quot usr.sbin/quotaon usr.sbin/rarpd usr.sbin/raycontrol usr.sbin/repquota usr.sbin/rip6query usr.sbin/rmt usr.sbin/rndc usr.sbin/rndc-confgen usr.sbin/route6d usr.sbin/rpc.lockd usr.sbin/rpc.statd usr.sbin/rpc.umntall usr.sbin/rpc.yppasswdd usr.sbin/rpc.ypupdated usr.sbin/rpc.ypxfrd usr.sbin/rpcbind usr.sbin/rrenumd usr.sbin/rtadvd usr.sbin/rtprio usr.sbin/rtsold usr.sbin/rwhod usr.sbin/sa usr.sbin/sade usr.sbin/sendmail usr.sbin/setfib usr.sbin/setfmac usr.sbin/setpmac usr.sbin/sicontrol usr.sbin/sliplogin usr.sbin/slstat usr.sbin/smbmsg usr.sbin/snapinfo usr.sbin/spkrtest usr.sbin/spray usr.sbin/sysinstall usr.sbin/syslogd usr.sbin/tcpdchk usr.sbin/tcpdmatch usr.sbin/tcpdrop usr.sbin/tcpdump usr.sbin/timed usr.sbin/traceroute usr.sbin/traceroute6 usr.sbin/trpt usr.sbin/tzsetup usr.sbin/ugidfw usr.sbin/update usr.sbin/usbconfig usr.sbin/usbdevs usr.sbin/vidcontrol usr.sbin/vipw usr.sbin/watch usr.sbin/watchdogd usr.sbin/wlandebug usr.sbin/wlconfig usr.sbin/wpa usr.sbin/xntpd usr.sbin/yp_mkdb usr.sbin/ypbind usr.sbin/yppoll usr.sbin/yppush usr.sbin/ypserv usr.sbin/ypset usr.sbin/zic usr.sbin/zzz
.if empty(D_INC_DONE:Musr.sbin/IPXrouted)
D_INC_DONE+= usr.sbin/IPXrouted
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/IPXrouted/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/IPXrouted/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ac)
D_INC_DONE+= usr.sbin/ac
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ac/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ac/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/accton)
D_INC_DONE+= usr.sbin/accton
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/accton/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/accton/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/acpi)
D_INC_DONE+= usr.sbin/acpi
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/acpi/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/acpi/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/adduser)
D_INC_DONE+= usr.sbin/adduser
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/adduser/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/adduser/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd)
D_INC_DONE+= usr.sbin/amd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ancontrol)
D_INC_DONE+= usr.sbin/ancontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ancontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ancontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/apm)
D_INC_DONE+= usr.sbin/apm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/apm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/apm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/apmd)
D_INC_DONE+= usr.sbin/apmd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/apmd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/apmd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/arp)
D_INC_DONE+= usr.sbin/arp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/arp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/arp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/asf)
D_INC_DONE+= usr.sbin/asf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/asf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/asf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/audit)
D_INC_DONE+= usr.sbin/audit
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/audit/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/audit/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/auditd)
D_INC_DONE+= usr.sbin/auditd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/auditd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/auditd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/auditreduce)
D_INC_DONE+= usr.sbin/auditreduce
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/auditreduce/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/auditreduce/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/authpf)
D_INC_DONE+= usr.sbin/authpf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/authpf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/authpf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/bluetooth)
D_INC_DONE+= usr.sbin/bluetooth
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/bluetooth/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/bluetooth/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/boot0cfg)
D_INC_DONE+= usr.sbin/boot0cfg
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/boot0cfg/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/boot0cfg/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/boot98cfg)
D_INC_DONE+= usr.sbin/boot98cfg
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/boot98cfg/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/boot98cfg/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/bootparamd)
D_INC_DONE+= usr.sbin/bootparamd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/bootparamd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/bootparamd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/bootpd)
D_INC_DONE+= usr.sbin/bootpd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/bootpd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/bootpd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/bsnmpd)
D_INC_DONE+= usr.sbin/bsnmpd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/bsnmpd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/bsnmpd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/btxld)
D_INC_DONE+= usr.sbin/btxld
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/btxld/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/btxld/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/burncd)
D_INC_DONE+= usr.sbin/burncd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/burncd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/burncd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/cdcontrol)
D_INC_DONE+= usr.sbin/cdcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/cdcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/cdcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/chkgrp)
D_INC_DONE+= usr.sbin/chkgrp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/chkgrp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/chkgrp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/chown)
D_INC_DONE+= usr.sbin/chown
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/chown/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/chown/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/chroot)
D_INC_DONE+= usr.sbin/chroot
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/chroot/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/chroot/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ckdist)
D_INC_DONE+= usr.sbin/ckdist
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ckdist/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ckdist/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/clear_locks)
D_INC_DONE+= usr.sbin/clear_locks
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/clear_locks/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/clear_locks/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/config)
D_INC_DONE+= usr.sbin/config
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/config/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/config/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/cpucontrol)
D_INC_DONE+= usr.sbin/cpucontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/cpucontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/cpucontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/crashinfo)
D_INC_DONE+= usr.sbin/crashinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/crashinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/crashinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/cron)
D_INC_DONE+= usr.sbin/cron
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/cron/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/cron/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/crunch)
D_INC_DONE+= usr.sbin/crunch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/crunch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/crunch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ctm)
D_INC_DONE+= usr.sbin/ctm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ctm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ctm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/cxgbtool)
D_INC_DONE+= usr.sbin/cxgbtool
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/cxgbtool/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/cxgbtool/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/daemon)
D_INC_DONE+= usr.sbin/daemon
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/daemon/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/daemon/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/dconschat)
D_INC_DONE+= usr.sbin/dconschat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/dconschat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/dconschat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/devinfo)
D_INC_DONE+= usr.sbin/devinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/devinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/devinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/digictl)
D_INC_DONE+= usr.sbin/digictl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/digictl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/digictl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/diskinfo)
D_INC_DONE+= usr.sbin/diskinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/diskinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/diskinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/dnssec-keygen)
D_INC_DONE+= usr.sbin/dnssec-keygen
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/dnssec-keygen/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/dnssec-keygen/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/dnssec-signzone)
D_INC_DONE+= usr.sbin/dnssec-signzone
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/dnssec-signzone/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/dnssec-signzone/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/dumpcis)
D_INC_DONE+= usr.sbin/dumpcis
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/dumpcis/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/dumpcis/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/editmap)
D_INC_DONE+= usr.sbin/editmap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/editmap/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/editmap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/edquota)
D_INC_DONE+= usr.sbin/edquota
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/edquota/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/edquota/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/eeprom)
D_INC_DONE+= usr.sbin/eeprom
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/eeprom/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/eeprom/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/extattr)
D_INC_DONE+= usr.sbin/extattr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/extattr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/extattr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/extattrctl)
D_INC_DONE+= usr.sbin/extattrctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/extattrctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/extattrctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/faithd)
D_INC_DONE+= usr.sbin/faithd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/faithd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/faithd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fdcontrol)
D_INC_DONE+= usr.sbin/fdcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fdcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fdcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fdformat)
D_INC_DONE+= usr.sbin/fdformat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fdformat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fdformat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fdread)
D_INC_DONE+= usr.sbin/fdread
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fdread/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fdread/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fdwrite)
D_INC_DONE+= usr.sbin/fdwrite
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fdwrite/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fdwrite/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fifolog)
D_INC_DONE+= usr.sbin/fifolog
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fifolog/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fifolog/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/flowctl)
D_INC_DONE+= usr.sbin/flowctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/flowctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/flowctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/freebsd-update)
D_INC_DONE+= usr.sbin/freebsd-update
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/freebsd-update/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/freebsd-update/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ftp-proxy)
D_INC_DONE+= usr.sbin/ftp-proxy
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ftp-proxy/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ftp-proxy/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/fwcontrol)
D_INC_DONE+= usr.sbin/fwcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/fwcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/fwcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/getfmac)
D_INC_DONE+= usr.sbin/getfmac
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/getfmac/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/getfmac/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/getpmac)
D_INC_DONE+= usr.sbin/getpmac
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/getpmac/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/getpmac/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/gssd)
D_INC_DONE+= usr.sbin/gssd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/gssd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/gssd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/gstat)
D_INC_DONE+= usr.sbin/gstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/gstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/gstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/i2c)
D_INC_DONE+= usr.sbin/i2c
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/i2c/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/i2c/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ifmcstat)
D_INC_DONE+= usr.sbin/ifmcstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ifmcstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ifmcstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/inetd)
D_INC_DONE+= usr.sbin/inetd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/inetd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/inetd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/iostat)
D_INC_DONE+= usr.sbin/iostat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/iostat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/iostat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ip6addrctl)
D_INC_DONE+= usr.sbin/ip6addrctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ip6addrctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ip6addrctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ipfwpcap)
D_INC_DONE+= usr.sbin/ipfwpcap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ipfwpcap/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ipfwpcap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/jail)
D_INC_DONE+= usr.sbin/jail
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/jail/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/jail/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/jexec)
D_INC_DONE+= usr.sbin/jexec
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/jexec/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/jexec/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/jls)
D_INC_DONE+= usr.sbin/jls
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/jls/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/jls/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kbdcontrol)
D_INC_DONE+= usr.sbin/kbdcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kbdcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kbdcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kbdmap)
D_INC_DONE+= usr.sbin/kbdmap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kbdmap/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kbdmap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kernbb)
D_INC_DONE+= usr.sbin/kernbb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kernbb/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kernbb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/keyserv)
D_INC_DONE+= usr.sbin/keyserv
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/keyserv/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/keyserv/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kgmon)
D_INC_DONE+= usr.sbin/kgmon
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kgmon/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kgmon/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kgzip)
D_INC_DONE+= usr.sbin/kgzip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kgzip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kgzip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/kldxref)
D_INC_DONE+= usr.sbin/kldxref
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/kldxref/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/kldxref/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/lastlogin)
D_INC_DONE+= usr.sbin/lastlogin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/lastlogin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/lastlogin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/lmcconfig)
D_INC_DONE+= usr.sbin/lmcconfig
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/lmcconfig/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/lmcconfig/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/lpr)
D_INC_DONE+= usr.sbin/lpr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/lpr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/lpr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/lptcontrol)
D_INC_DONE+= usr.sbin/lptcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/lptcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/lptcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mailstats)
D_INC_DONE+= usr.sbin/mailstats
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mailstats/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mailstats/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mailwrapper)
D_INC_DONE+= usr.sbin/mailwrapper
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mailwrapper/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mailwrapper/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/makefs)
D_INC_DONE+= usr.sbin/makefs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/makefs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/makefs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/makemap)
D_INC_DONE+= usr.sbin/makemap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/makemap/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/makemap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/manctl)
D_INC_DONE+= usr.sbin/manctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/manctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/manctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/memcontrol)
D_INC_DONE+= usr.sbin/memcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/memcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/memcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mergemaster)
D_INC_DONE+= usr.sbin/mergemaster
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mergemaster/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mergemaster/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mixer)
D_INC_DONE+= usr.sbin/mixer
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mixer/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mixer/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mld6query)
D_INC_DONE+= usr.sbin/mld6query
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mld6query/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mld6query/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mlxcontrol)
D_INC_DONE+= usr.sbin/mlxcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mlxcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mlxcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mount_nwfs)
D_INC_DONE+= usr.sbin/mount_nwfs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mount_nwfs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mount_nwfs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mount_portalfs)
D_INC_DONE+= usr.sbin/mount_portalfs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mount_portalfs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mount_portalfs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mount_smbfs)
D_INC_DONE+= usr.sbin/mount_smbfs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mount_smbfs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mount_smbfs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mountd)
D_INC_DONE+= usr.sbin/mountd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mountd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mountd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/moused)
D_INC_DONE+= usr.sbin/moused
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/moused/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/moused/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mptable)
D_INC_DONE+= usr.sbin/mptable
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mptable/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mptable/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mtest)
D_INC_DONE+= usr.sbin/mtest
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mtest/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mtest/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/mtree)
D_INC_DONE+= usr.sbin/mtree
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/mtree/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/mtree/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/named)
D_INC_DONE+= usr.sbin/named
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/named/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/named/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/named-checkconf)
D_INC_DONE+= usr.sbin/named-checkconf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/named-checkconf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/named-checkconf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/named-checkzone)
D_INC_DONE+= usr.sbin/named-checkzone
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/named-checkzone/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/named-checkzone/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/named.reload)
D_INC_DONE+= usr.sbin/named.reload
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/named.reload/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/named.reload/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ndiscvt)
D_INC_DONE+= usr.sbin/ndiscvt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ndiscvt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ndiscvt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ndp)
D_INC_DONE+= usr.sbin/ndp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ndp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ndp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/newsyslog)
D_INC_DONE+= usr.sbin/newsyslog
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/newsyslog/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/newsyslog/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/nfsd)
D_INC_DONE+= usr.sbin/nfsd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/nfsd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/nfsd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ngctl)
D_INC_DONE+= usr.sbin/ngctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ngctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ngctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/nghook)
D_INC_DONE+= usr.sbin/nghook
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/nghook/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/nghook/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/nologin)
D_INC_DONE+= usr.sbin/nologin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/nologin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/nologin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/nscd)
D_INC_DONE+= usr.sbin/nscd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/nscd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/nscd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ntp)
D_INC_DONE+= usr.sbin/ntp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ntp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ntp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/nvram)
D_INC_DONE+= usr.sbin/nvram
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/nvram/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/nvram/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ofwdump)
D_INC_DONE+= usr.sbin/ofwdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ofwdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ofwdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pciconf)
D_INC_DONE+= usr.sbin/pciconf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pciconf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pciconf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/periodic)
D_INC_DONE+= usr.sbin/periodic
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/periodic/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/periodic/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pkg_install)
D_INC_DONE+= usr.sbin/pkg_install
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pkg_install/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pkg_install/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pmcannotate)
D_INC_DONE+= usr.sbin/pmcannotate
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pmcannotate/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pmcannotate/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pmccontrol)
D_INC_DONE+= usr.sbin/pmccontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pmccontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pmccontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pmcstat)
D_INC_DONE+= usr.sbin/pmcstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pmcstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pmcstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pnpinfo)
D_INC_DONE+= usr.sbin/pnpinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pnpinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pnpinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/portsnap)
D_INC_DONE+= usr.sbin/portsnap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/portsnap/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/portsnap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/powerd)
D_INC_DONE+= usr.sbin/powerd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/powerd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/powerd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ppp)
D_INC_DONE+= usr.sbin/ppp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ppp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ppp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pppctl)
D_INC_DONE+= usr.sbin/pppctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pppctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pppctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pppd)
D_INC_DONE+= usr.sbin/pppd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pppd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pppd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pppstats)
D_INC_DONE+= usr.sbin/pppstats
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pppstats/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pppstats/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/praliases)
D_INC_DONE+= usr.sbin/praliases
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/praliases/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/praliases/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/praudit)
D_INC_DONE+= usr.sbin/praudit
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/praudit/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/praudit/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/procctl)
D_INC_DONE+= usr.sbin/procctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/procctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/procctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pstat)
D_INC_DONE+= usr.sbin/pstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pw)
D_INC_DONE+= usr.sbin/pw
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pw/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pw/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/pwd_mkdb)
D_INC_DONE+= usr.sbin/pwd_mkdb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/pwd_mkdb/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/pwd_mkdb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/quot)
D_INC_DONE+= usr.sbin/quot
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/quot/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/quot/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/quotaon)
D_INC_DONE+= usr.sbin/quotaon
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/quotaon/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/quotaon/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rarpd)
D_INC_DONE+= usr.sbin/rarpd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rarpd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rarpd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/raycontrol)
D_INC_DONE+= usr.sbin/raycontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/raycontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/raycontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/repquota)
D_INC_DONE+= usr.sbin/repquota
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/repquota/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/repquota/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rip6query)
D_INC_DONE+= usr.sbin/rip6query
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rip6query/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rip6query/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rmt)
D_INC_DONE+= usr.sbin/rmt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rmt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rmt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rndc)
D_INC_DONE+= usr.sbin/rndc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rndc/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rndc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rndc-confgen)
D_INC_DONE+= usr.sbin/rndc-confgen
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rndc-confgen/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rndc-confgen/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/route6d)
D_INC_DONE+= usr.sbin/route6d
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/route6d/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/route6d/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.lockd)
D_INC_DONE+= usr.sbin/rpc.lockd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.lockd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.lockd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.statd)
D_INC_DONE+= usr.sbin/rpc.statd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.statd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.statd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.umntall)
D_INC_DONE+= usr.sbin/rpc.umntall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.umntall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.umntall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.yppasswdd)
D_INC_DONE+= usr.sbin/rpc.yppasswdd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.yppasswdd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.yppasswdd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.ypupdated)
D_INC_DONE+= usr.sbin/rpc.ypupdated
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.ypupdated/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.ypupdated/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpc.ypxfrd)
D_INC_DONE+= usr.sbin/rpc.ypxfrd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpc.ypxfrd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpc.ypxfrd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rpcbind)
D_INC_DONE+= usr.sbin/rpcbind
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rpcbind/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rpcbind/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rrenumd)
D_INC_DONE+= usr.sbin/rrenumd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rrenumd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rrenumd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rtadvd)
D_INC_DONE+= usr.sbin/rtadvd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rtadvd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rtadvd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rtprio)
D_INC_DONE+= usr.sbin/rtprio
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rtprio/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rtprio/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rtsold)
D_INC_DONE+= usr.sbin/rtsold
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rtsold/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rtsold/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/rwhod)
D_INC_DONE+= usr.sbin/rwhod
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/rwhod/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/rwhod/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sa)
D_INC_DONE+= usr.sbin/sa
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sa/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sa/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sade)
D_INC_DONE+= usr.sbin/sade
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sade/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sade/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sendmail)
D_INC_DONE+= usr.sbin/sendmail
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sendmail/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sendmail/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/setfib)
D_INC_DONE+= usr.sbin/setfib
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/setfib/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/setfib/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/setfmac)
D_INC_DONE+= usr.sbin/setfmac
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/setfmac/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/setfmac/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/setpmac)
D_INC_DONE+= usr.sbin/setpmac
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/setpmac/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/setpmac/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sicontrol)
D_INC_DONE+= usr.sbin/sicontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sicontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sicontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sliplogin)
D_INC_DONE+= usr.sbin/sliplogin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sliplogin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sliplogin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/slstat)
D_INC_DONE+= usr.sbin/slstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/slstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/slstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/smbmsg)
D_INC_DONE+= usr.sbin/smbmsg
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/smbmsg/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/smbmsg/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/snapinfo)
D_INC_DONE+= usr.sbin/snapinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/snapinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/snapinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/spkrtest)
D_INC_DONE+= usr.sbin/spkrtest
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/spkrtest/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/spkrtest/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/spray)
D_INC_DONE+= usr.sbin/spray
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/spray/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/spray/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/sysinstall)
D_INC_DONE+= usr.sbin/sysinstall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/sysinstall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/sysinstall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/syslogd)
D_INC_DONE+= usr.sbin/syslogd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/syslogd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/syslogd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/tcpdchk)
D_INC_DONE+= usr.sbin/tcpdchk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/tcpdchk/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/tcpdchk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/tcpdmatch)
D_INC_DONE+= usr.sbin/tcpdmatch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/tcpdmatch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/tcpdmatch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/tcpdrop)
D_INC_DONE+= usr.sbin/tcpdrop
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/tcpdrop/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/tcpdrop/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/tcpdump)
D_INC_DONE+= usr.sbin/tcpdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/tcpdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/tcpdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/timed)
D_INC_DONE+= usr.sbin/timed
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/timed/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/timed/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/traceroute)
D_INC_DONE+= usr.sbin/traceroute
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/traceroute/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/traceroute/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/traceroute6)
D_INC_DONE+= usr.sbin/traceroute6
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/traceroute6/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/traceroute6/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/trpt)
D_INC_DONE+= usr.sbin/trpt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/trpt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/trpt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/tzsetup)
D_INC_DONE+= usr.sbin/tzsetup
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/tzsetup/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/tzsetup/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ugidfw)
D_INC_DONE+= usr.sbin/ugidfw
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ugidfw/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ugidfw/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/update)
D_INC_DONE+= usr.sbin/update
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/update/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/update/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/usbconfig)
D_INC_DONE+= usr.sbin/usbconfig
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/usbconfig/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/usbconfig/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/usbdevs)
D_INC_DONE+= usr.sbin/usbdevs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/usbdevs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/usbdevs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/vidcontrol)
D_INC_DONE+= usr.sbin/vidcontrol
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/vidcontrol/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/vidcontrol/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/vipw)
D_INC_DONE+= usr.sbin/vipw
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/vipw/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/vipw/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/watch)
D_INC_DONE+= usr.sbin/watch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/watch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/watch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/watchdogd)
D_INC_DONE+= usr.sbin/watchdogd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/watchdogd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/watchdogd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/wlandebug)
D_INC_DONE+= usr.sbin/wlandebug
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/wlandebug/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/wlandebug/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/wlconfig)
D_INC_DONE+= usr.sbin/wlconfig
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/wlconfig/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/wlconfig/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/wpa)
D_INC_DONE+= usr.sbin/wpa
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/wpa/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/wpa/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/xntpd)
D_INC_DONE+= usr.sbin/xntpd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/xntpd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/xntpd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/yp_mkdb)
D_INC_DONE+= usr.sbin/yp_mkdb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/yp_mkdb/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/yp_mkdb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ypbind)
D_INC_DONE+= usr.sbin/ypbind
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ypbind/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ypbind/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/yppoll)
D_INC_DONE+= usr.sbin/yppoll
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/yppoll/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/yppoll/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/yppush)
D_INC_DONE+= usr.sbin/yppush
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/yppush/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/yppush/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ypserv)
D_INC_DONE+= usr.sbin/ypserv
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ypserv/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ypserv/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/ypset)
D_INC_DONE+= usr.sbin/ypset
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/ypset/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/ypset/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/zic)
D_INC_DONE+= usr.sbin/zic
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/zic/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/zic/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/zzz)
D_INC_DONE+= usr.sbin/zzz
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/zzz/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/zzz/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/usr.sbin/IPXrouted/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/IPXrouted/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ac/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ac/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/accton/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/accton/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/acpi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/acpi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/adduser/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/adduser/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ancontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ancontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/apm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/apm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/apmd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/apmd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/arp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/arp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/asf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/asf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/audit/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/audit/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/auditd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/auditd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/auditreduce/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/auditreduce/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/authpf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/authpf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/bluetooth/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/bluetooth/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/boot0cfg/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/boot0cfg/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/boot98cfg/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/boot98cfg/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/bootparamd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/bootparamd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/bootpd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/bootpd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/bsnmpd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/bsnmpd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/btxld/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/btxld/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/burncd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/burncd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/cdcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/cdcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/chkgrp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/chkgrp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/chown/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/chown/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/chroot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/chroot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ckdist/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ckdist/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/clear_locks/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/clear_locks/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/config/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/config/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/cpucontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/cpucontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/crashinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/crashinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/cron/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/cron/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/crunch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/crunch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ctm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ctm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/cxgbtool/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/cxgbtool/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/daemon/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/daemon/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/dconschat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/dconschat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/devinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/devinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/digictl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/digictl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/diskinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/diskinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/dnssec-keygen/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/dnssec-keygen/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/dnssec-signzone/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/dnssec-signzone/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/dumpcis/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/dumpcis/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/editmap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/editmap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/edquota/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/edquota/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/eeprom/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/eeprom/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/extattr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/extattr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/extattrctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/extattrctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/faithd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/faithd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fdcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fdcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fdformat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fdformat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fdread/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fdread/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fdwrite/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fdwrite/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fifolog/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fifolog/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/flowctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/flowctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/freebsd-update/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/freebsd-update/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ftp-proxy/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ftp-proxy/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/fwcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/fwcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/getfmac/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/getfmac/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/getpmac/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/getpmac/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/gssd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/gssd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/gstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/gstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/i2c/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/i2c/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ifmcstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ifmcstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/inetd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/inetd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/iostat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/iostat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ip6addrctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ip6addrctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ipfwpcap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ipfwpcap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/jail/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/jail/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/jexec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/jexec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/jls/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/jls/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kbdcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kbdcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kbdmap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kbdmap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kernbb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kernbb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/keyserv/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/keyserv/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kgmon/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kgmon/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kgzip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kgzip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/kldxref/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/kldxref/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/lastlogin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/lastlogin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/lmcconfig/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/lmcconfig/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/lpr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/lpr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/lptcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/lptcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mailstats/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mailstats/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mailwrapper/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mailwrapper/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/makefs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/makefs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/makemap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/makemap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/manctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/manctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/memcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/memcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mergemaster/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mergemaster/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mixer/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mixer/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mld6query/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mld6query/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mlxcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mlxcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mount_nwfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mount_nwfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mount_portalfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mount_portalfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mount_smbfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mount_smbfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mountd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mountd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/moused/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/moused/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mptable/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mptable/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mtest/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mtest/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/mtree/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/mtree/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/named/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/named/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/named-checkconf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/named-checkconf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/named-checkzone/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/named-checkzone/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/named.reload/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/named.reload/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ndiscvt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ndiscvt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ndp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ndp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/newsyslog/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/newsyslog/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/nfsd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/nfsd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ngctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ngctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/nghook/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/nghook/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/nologin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/nologin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/nscd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/nscd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ntp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ntp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/nvram/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/nvram/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ofwdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ofwdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pciconf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pciconf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/periodic/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/periodic/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pkg_install/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pkg_install/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pmcannotate/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pmcannotate/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pmccontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pmccontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pmcstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pmcstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pnpinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pnpinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/portsnap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/portsnap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/powerd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/powerd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ppp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ppp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pppctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pppctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pppd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pppd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pppstats/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pppstats/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/praliases/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/praliases/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/praudit/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/praudit/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/procctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/procctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pw/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pw/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/pwd_mkdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/pwd_mkdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/quot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/quot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/quotaon/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/quotaon/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rarpd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rarpd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/raycontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/raycontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/repquota/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/repquota/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rip6query/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rip6query/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rmt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rmt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rndc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rndc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rndc-confgen/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rndc-confgen/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/route6d/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/route6d/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.lockd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.lockd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.statd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.statd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.umntall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.umntall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.yppasswdd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.yppasswdd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.ypupdated/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.ypupdated/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpc.ypxfrd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpc.ypxfrd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rpcbind/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rpcbind/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rrenumd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rrenumd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rtadvd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rtadvd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rtprio/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rtprio/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rtsold/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rtsold/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/rwhod/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/rwhod/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sade/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sade/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sendmail/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sendmail/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/setfib/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/setfib/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/setfmac/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/setfmac/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/setpmac/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/setpmac/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sicontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sicontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sliplogin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sliplogin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/slstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/slstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/smbmsg/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/smbmsg/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/snapinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/snapinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/spkrtest/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/spkrtest/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/spray/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/spray/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/sysinstall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/sysinstall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/syslogd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/syslogd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/tcpdchk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/tcpdchk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/tcpdmatch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/tcpdmatch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/tcpdrop/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/tcpdrop/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/tcpdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/tcpdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/timed/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/timed/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/traceroute/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/traceroute/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/traceroute6/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/traceroute6/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/trpt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/trpt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/tzsetup/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/tzsetup/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ugidfw/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ugidfw/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/update/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/update/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/usbconfig/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/usbconfig/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/usbdevs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/usbdevs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/vidcontrol/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/vidcontrol/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/vipw/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/vipw/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/watch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/watch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/watchdogd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/watchdogd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/wlandebug/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/wlandebug/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/wlconfig/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/wlconfig/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/wpa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/wpa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/xntpd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/xntpd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/yp_mkdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/yp_mkdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ypbind/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ypbind/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/yppoll/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/yppoll/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/yppush/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/yppush/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ypserv/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ypserv/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/ypset/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/ypset/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/zic/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/zic/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/zzz/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/zzz/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/usr.sbin/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/usr.sbin
	cd ${.SRCTOP}/usr.sbin && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
