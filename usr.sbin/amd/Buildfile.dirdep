# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  usr.sbin/amd/amd usr.sbin/amd/amq usr.sbin/amd/doc usr.sbin/amd/fixmount usr.sbin/amd/fsinfo usr.sbin/amd/hlfsd usr.sbin/amd/include usr.sbin/amd/libamu usr.sbin/amd/mk-amd-map usr.sbin/amd/pawd usr.sbin/amd/scripts usr.sbin/amd/wire-test
.if empty(D_INC_DONE:Musr.sbin/amd/amd)
D_INC_DONE+= usr.sbin/amd/amd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/amd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/amd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/amq)
D_INC_DONE+= usr.sbin/amd/amq
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/amq/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/amq/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/doc)
D_INC_DONE+= usr.sbin/amd/doc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/doc/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/doc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/fixmount)
D_INC_DONE+= usr.sbin/amd/fixmount
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/fixmount/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/fixmount/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/fsinfo)
D_INC_DONE+= usr.sbin/amd/fsinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/fsinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/fsinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/hlfsd)
D_INC_DONE+= usr.sbin/amd/hlfsd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/hlfsd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/hlfsd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/include)
D_INC_DONE+= usr.sbin/amd/include
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/include/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/include/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/libamu)
D_INC_DONE+= usr.sbin/amd/libamu
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/libamu/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/libamu/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/mk-amd-map)
D_INC_DONE+= usr.sbin/amd/mk-amd-map
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/mk-amd-map/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/mk-amd-map/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/pawd)
D_INC_DONE+= usr.sbin/amd/pawd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/pawd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/pawd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/scripts)
D_INC_DONE+= usr.sbin/amd/scripts
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/scripts/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/scripts/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.sbin/amd/wire-test)
D_INC_DONE+= usr.sbin/amd/wire-test
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.sbin/amd/wire-test/Buildfile.dirdep)
.include "${.SRCTOP}/usr.sbin/amd/wire-test/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/usr.sbin/amd/amd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/amd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/amq/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/amq/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/doc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/doc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/fixmount/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/fixmount/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/fsinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/fsinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/hlfsd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/hlfsd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/include/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/include/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/libamu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/libamu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/mk-amd-map/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/mk-amd-map/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/pawd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/pawd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/scripts/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/scripts/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.sbin/amd/wire-test/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.sbin/amd/wire-test/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/usr.sbin/amd/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/usr.sbin/amd
	cd ${.SRCTOP}/usr.sbin/amd && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
