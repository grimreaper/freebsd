# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  lib/csu/amd64 lib/csu/arm lib/csu/i386 lib/csu/ia64 lib/csu/mips lib/csu/powerpc lib/csu/sparc64
.if empty(D_INC_DONE:Mlib/csu/amd64)
D_INC_DONE+= lib/csu/amd64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/amd64/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/amd64/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/arm)
D_INC_DONE+= lib/csu/arm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/arm/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/arm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/i386)
D_INC_DONE+= lib/csu/i386
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/i386/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/i386/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/ia64)
D_INC_DONE+= lib/csu/ia64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/ia64/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/ia64/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/mips)
D_INC_DONE+= lib/csu/mips
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/mips/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/mips/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/powerpc)
D_INC_DONE+= lib/csu/powerpc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/powerpc/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/powerpc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu/sparc64)
D_INC_DONE+= lib/csu/sparc64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/sparc64/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/sparc64/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/lib/csu/amd64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/amd64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/arm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/arm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/i386/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/i386/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/ia64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/ia64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/mips/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/mips/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/powerpc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/powerpc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/sparc64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/sparc64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/lib/csu/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/lib/csu
	cd ${.SRCTOP}/lib/csu && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
