# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
dirdep := ${.SRCTOP}/lib/bind/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/csu/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libalias/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libarchive/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libauditd/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libautofs/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libbegemot/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libbluetooth/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libbsm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libbsnmp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libbz2/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libc_r/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libcalendar/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libcam/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libcom_err/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libcompat/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libcrypt/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libdevinfo/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libdevstat/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libdisk/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libdwarf/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libedit/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libelf/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libexpat/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libfetch/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libftp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libftpio/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libgeom/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libgpib/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libgssapi/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libipsec/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libipx/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libkiconv/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libkse/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libkvm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libmagic/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libmd/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libmemstat/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libmilter/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libmp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libncp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libnetgraph/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libngatm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libopie/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libpam/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libpcap/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libpmc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libproc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libradius/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/librpcsec_gss/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/librpcsvc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/librt/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsbuf/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsdp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsmb/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsmdb/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libsmutil/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libstand/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libtacplus/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libtelnet/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libthr/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libthread_db/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libufs/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libugidfw/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libusb20/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libusbhid/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libutil/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libvgl/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libwrap/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/liby/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libypclnt/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/libz/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/msun/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/lib/ncurses/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/lib/bind/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/bind/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libalias/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libalias/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libarchive/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libarchive/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libauditd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libauditd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libautofs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libautofs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbegemot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbegemot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbluetooth/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbluetooth/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbsnmp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbsnmp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbz2/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbz2/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libc_r/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libc_r/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcalendar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcalendar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcom_err/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcom_err/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcompat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcompat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcrypt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcrypt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdevinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdevinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdevstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdevstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdisk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdisk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdwarf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdwarf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libedit/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libedit/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libelf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libelf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libexpat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libexpat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libfetch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libfetch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libftp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libftp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libftpio/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libftpio/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgeom/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgeom/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgpib/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgpib/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgssapi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgssapi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libipsec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libipsec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libipx/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libipx/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkiconv/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkiconv/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkse/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkse/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkvm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkvm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmagic/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmagic/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmemstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmemstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmilter/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmilter/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libncp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libncp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libnetgraph/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libnetgraph/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libngatm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libngatm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libopie/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libopie/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpcap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpcap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpmc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpmc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libproc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libproc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libradius/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libradius/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librpcsec_gss/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librpcsec_gss/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librpcsvc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librpcsvc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsbuf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsbuf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsdp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsdp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmutil/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmutil/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libstand/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libstand/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libtacplus/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libtacplus/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libtelnet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libtelnet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libthr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libthr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libthread_db/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libthread_db/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libufs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libufs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libugidfw/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libugidfw/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libusb20/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libusb20/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libusbhid/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libusbhid/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libutil/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libutil/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libvgl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libvgl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libwrap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libwrap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/liby/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/liby/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libypclnt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libypclnt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libz/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libz/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/msun/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/msun/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/ncurses/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/ncurses/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/lib/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/lib
	cd ${.SRCTOP}/lib && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
