# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  lib/bind lib/csu lib/libalias lib/libarchive lib/libauditd lib/libautofs lib/libbegemot lib/libbluetooth lib/libbsm lib/libbsnmp lib/libbz2 lib/libc lib/libc_r lib/libcalendar lib/libcam lib/libcom_err lib/libcompat lib/libcrypt lib/libdevinfo lib/libdevstat lib/libdisk lib/libdwarf lib/libedit lib/libelf lib/libexpat lib/libfetch lib/libftp lib/libftpio lib/libgeom lib/libgpib lib/libgssapi lib/libipsec lib/libipx lib/libkiconv lib/libkse lib/libkvm lib/libmagic lib/libmd lib/libmemstat lib/libmilter lib/libmp lib/libncp lib/libnetgraph lib/libngatm lib/libopie lib/libpam lib/libpcap lib/libpmc lib/libproc lib/libradius lib/librpcsec_gss lib/librpcsvc lib/librt lib/libsbuf lib/libsdp lib/libsm lib/libsmb lib/libsmdb lib/libsmutil lib/libstand lib/libtacplus lib/libtelnet lib/libthr lib/libthread_db lib/libufs lib/libugidfw lib/libusb20 lib/libusbhid lib/libutil lib/libvgl lib/libwrap lib/liby lib/libypclnt lib/libz lib/msun lib/ncurses
.if empty(D_INC_DONE:Mlib/bind)
D_INC_DONE+= lib/bind
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/bind/Buildfile.dirdep)
.include "${.SRCTOP}/lib/bind/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/csu)
D_INC_DONE+= lib/csu
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/csu/Buildfile.dirdep)
.include "${.SRCTOP}/lib/csu/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libalias)
D_INC_DONE+= lib/libalias
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libalias/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libalias/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libarchive)
D_INC_DONE+= lib/libarchive
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libarchive/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libarchive/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libauditd)
D_INC_DONE+= lib/libauditd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libauditd/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libauditd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libautofs)
D_INC_DONE+= lib/libautofs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libautofs/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libautofs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libbegemot)
D_INC_DONE+= lib/libbegemot
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libbegemot/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libbegemot/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libbluetooth)
D_INC_DONE+= lib/libbluetooth
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libbluetooth/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libbluetooth/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libbsm)
D_INC_DONE+= lib/libbsm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libbsm/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libbsm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libbsnmp)
D_INC_DONE+= lib/libbsnmp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libbsnmp/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libbsnmp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libbz2)
D_INC_DONE+= lib/libbz2
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libbz2/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libbz2/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libc)
D_INC_DONE+= lib/libc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libc/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libc_r)
D_INC_DONE+= lib/libc_r
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libc_r/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libc_r/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libcalendar)
D_INC_DONE+= lib/libcalendar
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libcalendar/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libcalendar/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libcam)
D_INC_DONE+= lib/libcam
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libcam/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libcam/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libcom_err)
D_INC_DONE+= lib/libcom_err
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libcom_err/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libcom_err/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libcompat)
D_INC_DONE+= lib/libcompat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libcompat/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libcompat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libcrypt)
D_INC_DONE+= lib/libcrypt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libcrypt/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libcrypt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libdevinfo)
D_INC_DONE+= lib/libdevinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libdevinfo/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libdevinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libdevstat)
D_INC_DONE+= lib/libdevstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libdevstat/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libdevstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libdisk)
D_INC_DONE+= lib/libdisk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libdisk/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libdisk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libdwarf)
D_INC_DONE+= lib/libdwarf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libdwarf/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libdwarf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libedit)
D_INC_DONE+= lib/libedit
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libedit/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libedit/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libelf)
D_INC_DONE+= lib/libelf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libelf/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libelf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libexpat)
D_INC_DONE+= lib/libexpat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libexpat/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libexpat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libfetch)
D_INC_DONE+= lib/libfetch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libfetch/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libfetch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libftp)
D_INC_DONE+= lib/libftp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libftp/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libftp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libftpio)
D_INC_DONE+= lib/libftpio
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libftpio/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libftpio/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libgeom)
D_INC_DONE+= lib/libgeom
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libgeom/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libgeom/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libgpib)
D_INC_DONE+= lib/libgpib
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libgpib/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libgpib/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libgssapi)
D_INC_DONE+= lib/libgssapi
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libgssapi/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libgssapi/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libipsec)
D_INC_DONE+= lib/libipsec
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libipsec/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libipsec/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libipx)
D_INC_DONE+= lib/libipx
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libipx/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libipx/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libkiconv)
D_INC_DONE+= lib/libkiconv
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libkiconv/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libkiconv/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libkse)
D_INC_DONE+= lib/libkse
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libkse/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libkse/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libkvm)
D_INC_DONE+= lib/libkvm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libkvm/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libkvm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libmagic)
D_INC_DONE+= lib/libmagic
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libmagic/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libmagic/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libmd)
D_INC_DONE+= lib/libmd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libmd/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libmd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libmemstat)
D_INC_DONE+= lib/libmemstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libmemstat/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libmemstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libmilter)
D_INC_DONE+= lib/libmilter
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libmilter/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libmilter/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libmp)
D_INC_DONE+= lib/libmp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libmp/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libmp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libncp)
D_INC_DONE+= lib/libncp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libncp/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libncp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libnetgraph)
D_INC_DONE+= lib/libnetgraph
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libnetgraph/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libnetgraph/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libngatm)
D_INC_DONE+= lib/libngatm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libngatm/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libngatm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libopie)
D_INC_DONE+= lib/libopie
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libopie/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libopie/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libpam)
D_INC_DONE+= lib/libpam
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libpam/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libpam/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libpcap)
D_INC_DONE+= lib/libpcap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libpcap/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libpcap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libpmc)
D_INC_DONE+= lib/libpmc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libpmc/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libpmc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libproc)
D_INC_DONE+= lib/libproc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libproc/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libproc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libradius)
D_INC_DONE+= lib/libradius
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libradius/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libradius/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/librpcsec_gss)
D_INC_DONE+= lib/librpcsec_gss
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/librpcsec_gss/Buildfile.dirdep)
.include "${.SRCTOP}/lib/librpcsec_gss/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/librpcsvc)
D_INC_DONE+= lib/librpcsvc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/librpcsvc/Buildfile.dirdep)
.include "${.SRCTOP}/lib/librpcsvc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/librt)
D_INC_DONE+= lib/librt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/librt/Buildfile.dirdep)
.include "${.SRCTOP}/lib/librt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsbuf)
D_INC_DONE+= lib/libsbuf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsbuf/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsbuf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsdp)
D_INC_DONE+= lib/libsdp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsdp/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsdp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsm)
D_INC_DONE+= lib/libsm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsm/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsmb)
D_INC_DONE+= lib/libsmb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsmb/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsmb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsmdb)
D_INC_DONE+= lib/libsmdb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsmdb/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsmdb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libsmutil)
D_INC_DONE+= lib/libsmutil
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libsmutil/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libsmutil/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libstand)
D_INC_DONE+= lib/libstand
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libstand/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libstand/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libtacplus)
D_INC_DONE+= lib/libtacplus
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libtacplus/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libtacplus/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libtelnet)
D_INC_DONE+= lib/libtelnet
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libtelnet/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libtelnet/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libthr)
D_INC_DONE+= lib/libthr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libthr/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libthr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libthread_db)
D_INC_DONE+= lib/libthread_db
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libthread_db/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libthread_db/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libufs)
D_INC_DONE+= lib/libufs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libufs/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libufs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libugidfw)
D_INC_DONE+= lib/libugidfw
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libugidfw/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libugidfw/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libusb20)
D_INC_DONE+= lib/libusb20
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libusb20/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libusb20/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libusbhid)
D_INC_DONE+= lib/libusbhid
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libusbhid/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libusbhid/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libutil)
D_INC_DONE+= lib/libutil
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libutil/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libutil/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libvgl)
D_INC_DONE+= lib/libvgl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libvgl/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libvgl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libwrap)
D_INC_DONE+= lib/libwrap
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libwrap/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libwrap/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/liby)
D_INC_DONE+= lib/liby
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/liby/Buildfile.dirdep)
.include "${.SRCTOP}/lib/liby/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libypclnt)
D_INC_DONE+= lib/libypclnt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libypclnt/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libypclnt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/libz)
D_INC_DONE+= lib/libz
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/libz/Buildfile.dirdep)
.include "${.SRCTOP}/lib/libz/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/msun)
D_INC_DONE+= lib/msun
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/msun/Buildfile.dirdep)
.include "${.SRCTOP}/lib/msun/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mlib/ncurses)
D_INC_DONE+= lib/ncurses
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/lib/ncurses/Buildfile.dirdep)
.include "${.SRCTOP}/lib/ncurses/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/lib/bind/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/bind/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/csu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/csu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libalias/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libalias/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libarchive/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libarchive/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libauditd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libauditd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libautofs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libautofs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbegemot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbegemot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbluetooth/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbluetooth/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbsnmp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbsnmp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libbz2/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libbz2/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libc_r/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libc_r/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcalendar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcalendar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcom_err/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcom_err/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcompat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcompat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libcrypt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libcrypt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdevinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdevinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdevstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdevstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdisk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdisk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libdwarf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libdwarf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libedit/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libedit/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libelf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libelf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libexpat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libexpat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libfetch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libfetch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libftp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libftp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libftpio/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libftpio/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgeom/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgeom/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgpib/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgpib/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libgssapi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libgssapi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libipsec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libipsec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libipx/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libipx/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkiconv/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkiconv/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkse/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkse/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libkvm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libkvm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmagic/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmagic/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmemstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmemstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmilter/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmilter/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libmp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libmp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libncp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libncp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libnetgraph/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libnetgraph/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libngatm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libngatm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libopie/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libopie/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpcap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpcap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libpmc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libpmc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libproc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libproc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libradius/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libradius/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librpcsec_gss/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librpcsec_gss/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librpcsvc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librpcsvc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/librt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/librt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsbuf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsbuf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsdp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsdp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libsmutil/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libsmutil/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libstand/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libstand/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libtacplus/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libtacplus/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libtelnet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libtelnet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libthr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libthr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libthread_db/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libthread_db/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libufs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libufs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libugidfw/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libugidfw/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libusb20/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libusb20/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libusbhid/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libusbhid/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libutil/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libutil/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libvgl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libvgl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libwrap/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libwrap/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/liby/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/liby/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libypclnt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libypclnt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/libz/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/libz/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/msun/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/msun/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/lib/ncurses/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/lib/ncurses/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/lib/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/lib
	cd ${.SRCTOP}/lib && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
