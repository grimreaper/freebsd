# $FreeBSD$

LIB=		ncurses${LIB_SUFFIX}
SHLIB_MAJOR=	7

NO_LINT=

NCURSES_MAJOR!=	egrep 'NCURSES_MAJOR[ 	]*=' ${NCURSES_DIR}/dist.mk | sed -e 's%^[^0-9]*%%'
NCURSES_MINOR!=	egrep 'NCURSES_MINOR[ 	]*=' ${NCURSES_DIR}/dist.mk | sed -e 's%^[^0-9]*%%'
NCURSES_PATCH!=	egrep 'NCURSES_PATCH[ 	]*=' ${NCURSES_DIR}/dist.mk | sed -e 's%^[^0-9]*%%'

# From autoconf (!)
.if defined(ENABLE_WIDEC)
NCURSES_CH_T=		cchar_t
NCURSES_OK_WCHAR_T=	1
NEED_WCHAR_H=		1
.else
NCURSES_CH_T=		chtype
NCURSES_OK_WCHAR_T=
NEED_WCHAR_H=		0
.endif
NCURSES_CONST=		const
NCURSES_EXT_COLORS=	0
NCURSES_EXT_FUNCS=	1
NCURSES_INLINE=		inline
NCURSES_LIBUTF8=	0
NCURSES_MBSTATE_T=	0
NCURSES_MOUSE_VERSION=	1
NCURSES_OPAQUE=		0
NCURSES_OSPEED=		short
NCURSES_SBOOL=		char
NCURSES_SIZE_T=		short
NCURSES_TPARM_VARARGS=	1
NCURSES_WCHAR_T=	0
NCURSES_WINT_T=		0
NCURSES_XNAMES=		1
BROKEN_LINKER=		0
BUILTIN_BOOL=		1
ENABLE_LP64=		0
ENABLE_OPAQUE=		NCURSES_OPAQUE
ENABLE_REENTRANT=	0
HAVE_TCGETATTR=		1
HAVE_TERMIOS_H=		1
HAVE_TERMIO_H=		0
HAVE_VSSCANF=		1
HEADER_STDBOOL=		1
# XXX amd64, ia64 1L and int
ONEUL=			1UL
TYPEOF_CHTYPE=		long
TYPEOF_MMASK_T=		long
TYPE_OF_BOOL=		unsigned char
USE_BIG_STRINGS=	1
USE_CXX_BOOL=		defined(__cplusplus)

GENSRCS=	\
	codes.c \
	expanded.c \
	fallback.c \
	lib_gen.c \
	lib_keyname.c \
	names.c \
	unctrl.c

GENHDRS=	\
	curses.h \
	hashsize.h \
	init_keytry.h \
	nomacros.h \
	parametrized.h \
	term.h \
	termcap.h \
	unctrl.h

SRCS=	${GENHDRS} ${GENSRCS}

.PATH: ${NCURSES_DIR}/ncurses/base
SRCS+=	\
	define_key.c \
	key_defined.c \
	keybound.c \
	keyok.c \
	legacy_coding.c \
	lib_addch.c \
	lib_addstr.c \
	lib_beep.c \
	lib_bkgd.c \
	lib_box.c \
	lib_chgat.c \
	lib_clear.c \
	lib_clearok.c \
	lib_clrbot.c \
	lib_clreol.c \
	lib_color.c \
	lib_colorset.c \
	lib_delch.c \
	lib_delwin.c \
	lib_dft_fgbg.c \
	lib_echo.c \
	lib_endwin.c \
	lib_erase.c \
	lib_flash.c \
	lib_freeall.c \
	lib_getch.c \
	lib_getstr.c \
	lib_hline.c \
	lib_immedok.c \
	lib_inchstr.c \
	lib_initscr.c \
	lib_insch.c \
	lib_insdel.c \
	lib_insnstr.c \
	lib_instr.c \
	lib_isendwin.c \
	lib_leaveok.c \
	lib_mouse.c \
	lib_move.c \
	lib_mvwin.c \
	lib_newterm.c \
	lib_newwin.c \
	lib_nl.c \
	lib_overlay.c \
	lib_pad.c \
	lib_printw.c \
	lib_redrawln.c \
	lib_refresh.c \
	lib_restart.c \
	lib_scanw.c \
	lib_screen.c \
	lib_scroll.c \
	lib_scrollok.c \
	lib_scrreg.c \
	lib_set_term.c \
	lib_slk.c \
	lib_slkatr_set.c \
	lib_slkatrof.c \
	lib_slkatron.c \
	lib_slkatrset.c \
	lib_slkattr.c \
	lib_slkclear.c \
	lib_slkcolor.c \
	lib_slkinit.c \
	lib_slklab.c \
	lib_slkrefr.c \
	lib_slkset.c \
	lib_slktouch.c \
	lib_touch.c \
	lib_ungetch.c \
	lib_vline.c \
	lib_wattroff.c \
	lib_wattron.c \
	lib_winch.c \
	lib_window.c \
	memmove.c \
	nc_panel.c \
	resizeterm.c \
	safe_sprintf.c \
	tries.c \
	version.c \
	vsscanf.c \
	wresize.c

.PATH: ${NCURSES_DIR}/ncurses/tinfo
SRCS+=	\
	access.c \
	add_tries.c \
	alloc_entry.c \
	alloc_ttype.c \
	captoinfo.c \
	comp_captab.c \
	comp_error.c \
	comp_expand.c \
	comp_hash.c \
	comp_parse.c \
	comp_scan.c \
	db_iterator.c \
	doalloc.c \
	entries.c \
	free_ttype.c \
	getenv_num.c \
	hashed_db.c \
	home_terminfo.c \
	init_keytry.c \
	lib_acs.c \
	lib_baudrate.c \
	lib_cur_term.c \
	lib_data.c \
	lib_has_cap.c \
	lib_kernel.c \
	lib_longname.c \
	lib_napms.c \
	lib_options.c \
	lib_print.c \
	lib_raw.c \
	lib_setup.c \
	lib_termcap.c \
	lib_termname.c \
	lib_tgoto.c \
	lib_ti.c \
	lib_tparm.c \
	lib_tputs.c \
	lib_ttyflags.c \
	name_match.c \
	parse_entry.c \
	read_entry.c \
	setbuf.c \
	strings.c \
	trim_sgr0.c \
	write_entry.c

.PATH: ${NCURSES_DIR}/ncurses/tty
SRCS+=	\
	hardscroll.c \
	hashmap.c \
	lib_mvcur.c \
	lib_tstp.c \
	lib_twait.c \
	lib_vidattr.c \
	tty_update.c

.if defined(ENABLE_WIDEC)
.PATH: ${NCURSES_DIR}/ncurses/widechar
SRCS+=	\
	charable.c \
	lib_add_wch.c \
	lib_box_set.c \
	lib_cchar.c \
	lib_erasewchar.c \
	lib_get_wch.c \
	lib_get_wstr.c \
	lib_hline_set.c \
	lib_in_wch.c \
	lib_in_wchnstr.c \
	lib_ins_wch.c \
	lib_inwstr.c \
	lib_key_name.c \
	lib_pecho_wchar.c \
	lib_slk_wset.c \
	lib_unget_wch.c \
	lib_vid_attr.c \
	lib_vline_set.c \
	lib_wacs.c \
	lib_wunctrl.c
.endif

.PATH: ${NCURSES_DIR}/ncurses/trace
SRCS+=	\
	lib_trace.c \
	visbuf.c

# Currently unused, for debugging libncurses itself.
DBGSRCS= \
	lib_traceatr.c \
	lib_tracebits.c \
	lib_tracechr.c \
	lib_tracedmp.c \
	lib_tracemse.c \
	trace_buf.c \
	trace_tries.c \
	trace_xnames.c \
	varargs.c

# From our old libtermcap.
# Used instead of the hideous read_termcap.c abomination.
SRCS+=	termcap.c

CFLAGS+=	-DFREEBSD_NATIVE -DTERMIOS

# Installed
INCS+=	curses.h term.h unctrl.h ncurses_dll.h

names.c: MKnames.awk
	${AWK} -f ${NCURSES_DIR}/ncurses/tinfo/MKnames.awk bigstrings=${USE_BIG_STRINGS} ${NCURSES_DIR}/include/Caps > names.c

codes.c:
	${AWK} -f ${NCURSES_DIR}/ncurses/tinfo/MKcodes.awk bigstrings=${USE_BIG_STRINGS} ${NCURSES_DIR}/include/Caps > codes.c

lib_gen.c: curses.h
	LC_ALL=C sh ${NCURSES_DIR}/ncurses/base/MKlib_gen.sh "${CC} -E ${CFLAGS}" \
	    "${AWK}" generated < curses.h >$@

lib_keyname.c: keys.list
	${AWK} -f ${NCURSES_DIR}/ncurses/base/MKkeyname.awk bigstrings=${USE_BIG_STRINGS} keys.list > lib_keyname.c

unctrl.c:
	echo | ${AWK} -f ${NCURSES_DIR}/ncurses/base/MKunctrl.awk bigstrings=${USE_BIG_STRINGS} > unctrl.c

comp_captab.c: make_hash
	sh ${NCURSES_DIR}/ncurses/tinfo/MKcaptab.sh "${AWK}" \
	    ${USE_BIG_STRINGS} ${NCURSES_DIR}/ncurses/tinfo/MKcaptab.awk \
	    ${NCURSES_DIR}/include/Caps > comp_captab.c

expanded.c:
	sh ${NCURSES_DIR}/ncurses/tty/MKexpanded.sh "${CC} -E" ${CFLAGS} >expanded.c

fallback.c:
	sh ${NCURSES_DIR}/ncurses/tinfo/MKfallback.sh > fallback.c

# Generated headers
nomacros.h: curses.h
	LC_ALL=C sh ${NCURSES_DIR}/ncurses/base/MKlib_gen.sh "${CC} -E ${CFLAGS}" \
	    "${AWK}" generated < curses.h | fgrep undef > $@

init_keytry.h: keys.list
	${HOSTTOOL_STAGEDIR}/buildtools/ncurses/make_keys keys.list > init_keytry.h

hashsize.h:
	sh ${NCURSES_DIR}/include/MKhashsize.sh ${NCURSES_DIR}/include/Caps > $@

parametrized.h:
	AWK=${AWK} sh ${NCURSES_DIR}/include/MKparametrized.sh \
	    ${NCURSES_DIR}/include/Caps > $@


.if exists(${STAGEDIR}/usr/include/ncurses_cfg.h)
NCURSES_CFG_H =	${STAGEDIR}/usr/include/ncurses_cfg.h
.else
NCURSES_CFG_H =	${COMMONSTAGEDIR}/usr/include/ncurses_cfg.h
.endif

term.h: MKterm.h.awk
	${AWK} -f MKterm.h.awk ${NCURSES_DIR}/include/Caps > $@.new
	sh ${NCURSES_DIR}/include/edit_cfg.sh ${NCURSES_CFG_H} $@.new
	mv -f $@.new $@

curses.h: curses.head
	cat curses.head > $@.new
	AWK=${AWK} _POSIX2_VERSION=199209 sh ${NCURSES_DIR}/include/MKkey_defs.sh \
	    ${NCURSES_DIR}/include/Caps >> $@.new
.if defined(ENABLE_WIDEC)
	cat ${NCURSES_DIR}/include/curses.wide >> $@.new
.endif
	cat ${NCURSES_DIR}/include/curses.tail >> $@.new
	mv -f $@.new $@

# Generated intermediate files
keys.list:
	AWK=${AWK} sh ${NCURSES_DIR}/ncurses/tinfo/MKkeys_list.sh \
	    ${NCURSES_DIR}/include/Caps | LC_ALL=C sort > keys.list

# ./configure generated
MKterm.h.awk: MKterm.h.awk.in
	sed <${NCURSES_DIR}/include/MKterm.h.awk.in >$@ \
	    -e "/@BROKEN_LINKER@/s%%${BROKEN_LINKER}%" \
	    -e "/@NCURSES_MAJOR@/s%%${NCURSES_MAJOR}%" \
	    -e "/@NCURSES_MINOR@/s%%${NCURSES_MINOR}%" \
	    -e "/@NCURSES_CONST@/s%%${NCURSES_CONST}%" \
	    -e "/@NCURSES_TPARM_VARARGS@/s%%${NCURSES_TPARM_VARARGS}%" \
	    -e "/@NCURSES_SBOOL@/s%%${NCURSES_SBOOL}%" \
	    -e "/@NCURSES_XNAMES@/s%%${NCURSES_XNAMES}%" \
	    -e "/@HAVE_TERMIOS_H@/s%%${HAVE_TERMIOS_H}%" \
	    -e "/@HAVE_TERMIO_H@/s%%${HAVE_TERMIO_H}%" \
	    -e "/@HAVE_TCGETATTR@/s%%${HAVE_TCGETATTR}%" \
	    -e "s%@cf_cv_enable_reentrant@%${ENABLE_REENTRANT}%g"

termcap.h: termcap.h.in
	sed <${NCURSES_DIR}/include/termcap.h.in >$@ \
	    -e "/@NCURSES_MAJOR@/s%%${NCURSES_MAJOR}%" \
	    -e "/@NCURSES_MINOR@/s%%${NCURSES_MINOR}%" \
	    -e "/@NCURSES_CONST@/s%%${NCURSES_CONST}%" \
	    -e "/@NCURSES_OSPEED@/s%%${NCURSES_OSPEED}%"

curses.head: curses.h.in
	sed <${NCURSES_DIR}/include/curses.h.in >$@ \
	    -e "/@BROKEN_LINKER@/s%%${BROKEN_LINKER}%" \
	    -e "/@HAVE_VSSCANF@/s%%${HAVE_VSSCANF}%" \
	    -e "/@NCURSES_CH_T@/s%%${NCURSES_CH_T}%" \
	    -e "/@NCURSES_CONST@/s%%${NCURSES_CONST}%" \
	    -e "/@NCURSES_EXT_COLORS@/s%%${NCURSES_EXT_COLORS}%" \
	    -e "/@NCURSES_EXT_FUNCS@/s%%${NCURSES_EXT_FUNCS}%" \
	    -e "/@NCURSES_INLINE@/s%%${NCURSES_INLINE}%" \
	    -e "/@NCURSES_LIBUTF8@/s%%${NCURSES_LIBUTF8}%" \
	    -e "/@NCURSES_MAJOR@/s%%${NCURSES_MAJOR}%" \
	    -e "/@NCURSES_MBSTATE_T@/s%%${NCURSES_MBSTATE_T}%" \
	    -e "/@NCURSES_MINOR@/s%%${NCURSES_MINOR}%" \
	    -e "/@NCURSES_MOUSE_VERSION@/s%%${NCURSES_MOUSE_VERSION}%" \
	    -e "/@NCURSES_OK_WCHAR_T@/s%%${NCURSES_OK_WCHAR_T}%" \
	    -e "/@NCURSES_OPAQUE@/s%%${NCURSES_OPAQUE}%" \
	    -e "/@NCURSES_PATCH@/s%%${NCURSES_PATCH}%" \
	    -e "/@NCURSES_SIZE_T@/s%%${NCURSES_SIZE_T}%" \
	    -e "/@NCURSES_TPARM_VARARGS@/s%%${NCURSES_TPARM_VARARGS}%" \
	    -e "/@NCURSES_WCHAR_T@/s%%${NCURSES_WCHAR_T}%" \
	    -e "/@NCURSES_WCHAR_T@/s%%${NCURSES_WCHAR_T}%" \
	    -e "/@NCURSES_WINT_T@/s%%${NCURSES_WINT_T}%" \
	    -e "/@NEED_WCHAR_H@/s%%${NEED_WCHAR_H}%" \
	    -e "/@USE_CXX_BOOL@/s%%${USE_CXX_BOOL}%" \
	    -e "s%@cf_cv_1UL@%${ONEUL}%g" \
	    -e "s%@cf_cv_builtin_bool@%${BUILTIN_BOOL}%g" \
	    -e "s%@cf_cv_enable_lp64@%${ENABLE_LP64}%g" \
	    -e "s%@cf_cv_enable_opaque@%${ENABLE_OPAQUE}%g" \
	    -e "s%@cf_cv_enable_reentrant@%${ENABLE_REENTRANT}%g" \
	    -e "s%@cf_cv_header_stdbool_h@%${HEADER_STDBOOL}%g" \
	    -e "s%@cf_cv_type_of_bool@%${TYPE_OF_BOOL}%g" \
	    -e "s%@cf_cv_typeof_chtype@%${TYPEOF_CHTYPE}%g" \
	    -e "s%@cf_cv_typeof_mmask_t@%${TYPEOF_MMASK_T}%g" \
	    -e "s/ _WCHAR_T/ __wchar_t/g" \
	    -e "s/ _WINT_T/ __wint_t/g"

unctrl.h: unctrl.h.in
	sed <${NCURSES_DIR}/include/$@.in >$@ \
	    -e "/@NCURSES_MAJOR@/s%%${NCURSES_MAJOR}%" \
	    -e "/@NCURSES_MINOR@/s%%${NCURSES_MINOR}%"

.if exists(${HOSTTOOL_STAGEDIR}/buildtools/ncurses/make_hash)
MAKE_HASH = ${HOSTTOOL_STAGEDIR}/buildtools/ncurses/make_hash
.else
MAKE_HASH = ${SHAREDHOSTTOOL_STAGEDIR}/buildtools/ncurses/make_hash
.endif

make_hash : ${MAKE_HASH}
	cp ${.ALLSRC} ${.TARGET}

