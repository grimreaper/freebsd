# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP= include include/arpa stage sys/MACHINE_ARCH/include sys/net sys/netinet sys/netinet6 sys/netipsec sys/sys
.if empty(D_INC_DONE:Minclude)
D_INC_DONE+= include
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/include/Buildfile.dirdep)
.include "${.SRCTOP}/include/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Minclude/arpa)
D_INC_DONE+= include/arpa
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/include/arpa/Buildfile.dirdep)
.include "${.SRCTOP}/include/arpa/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mstage)
D_INC_DONE+= stage
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/stage/Buildfile.dirdep)
.include "${.SRCTOP}/stage/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/net)
D_INC_DONE+= sys/net
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/net/Buildfile.dirdep)
.include "${.SRCTOP}/sys/net/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netinet)
D_INC_DONE+= sys/netinet
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netinet/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netinet/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netinet6)
D_INC_DONE+= sys/netinet6
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netinet6/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netinet6/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netipsec)
D_INC_DONE+= sys/netipsec
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netipsec/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netipsec/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/sys)
D_INC_DONE+= sys/sys
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/sys/Buildfile.dirdep)
.include "${.SRCTOP}/sys/sys/Buildfile.dirdep"
.endif
.endif

.for t in ${MACHINE_LIST}
_d=sys/MACHINE_ARCH/include
.if empty(D_INC_DONE:M${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g})
D_INC_DONE+= ${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g}
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g}/Buildfile.dirdep)
.include "${.SRCTOP}/${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g}/Buildfile.dirdep"
.endif
.endif

.endfor
.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/include/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/include/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/include/arpa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/include/arpa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/stage/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/stage/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/net/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/net/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet6/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet6/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netipsec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netipsec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sys/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sys/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.for t in ${_MACHINE_LIST}
_d=sys/MACHINE_ARCH/include
.if exists(${.SRCTOP}/${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g}/Buildfile.dirdep)
D_TGTS_${t}+= ${.OBJROOT}/${t}/${_d:S,MACHINE_ARCH,${MACHINE_ARCH.${t}},g}/all
D_TGTS_${t}:= ${D_TGTS_${t}}
.endif

.endfor

.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/lib/libipsec/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/lib/libipsec
	cd ${.SRCTOP}/lib/libipsec && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
