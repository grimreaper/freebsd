# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  sys/amd64 sys/arm sys/boot sys/bsm sys/cam sys/cddl sys/compat sys/conf sys/contrib sys/crypto sys/ddb sys/dev sys/fs sys/gdb sys/geom sys/gnu sys/i386 sys/ia64 sys/isa sys/kern sys/kgssapi sys/legacy sys/libkern sys/mips sys/modules sys/net sys/net80211 sys/netatalk sys/netgraph sys/netinet sys/netinet6 sys/netipsec sys/netipx sys/netnatm sys/netncp sys/netsmb sys/nfs sys/nfs4client sys/nfsclient sys/nfsserver sys/nlm sys/opencrypto sys/pc98 sys/pci sys/powerpc sys/rpc sys/security sys/sparc64 sys/sun4v sys/sys sys/tools sys/ufs sys/vm sys/xdr sys/xen
.if empty(D_INC_DONE:Msys/amd64)
D_INC_DONE+= sys/amd64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/amd64/Buildfile.dirdep)
.include "${.SRCTOP}/sys/amd64/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/arm)
D_INC_DONE+= sys/arm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/arm/Buildfile.dirdep)
.include "${.SRCTOP}/sys/arm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/boot)
D_INC_DONE+= sys/boot
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/boot/Buildfile.dirdep)
.include "${.SRCTOP}/sys/boot/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/bsm)
D_INC_DONE+= sys/bsm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/bsm/Buildfile.dirdep)
.include "${.SRCTOP}/sys/bsm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/cam)
D_INC_DONE+= sys/cam
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/cam/Buildfile.dirdep)
.include "${.SRCTOP}/sys/cam/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/cddl)
D_INC_DONE+= sys/cddl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/cddl/Buildfile.dirdep)
.include "${.SRCTOP}/sys/cddl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/compat)
D_INC_DONE+= sys/compat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/compat/Buildfile.dirdep)
.include "${.SRCTOP}/sys/compat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/conf)
D_INC_DONE+= sys/conf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/conf/Buildfile.dirdep)
.include "${.SRCTOP}/sys/conf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/contrib)
D_INC_DONE+= sys/contrib
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/contrib/Buildfile.dirdep)
.include "${.SRCTOP}/sys/contrib/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/crypto)
D_INC_DONE+= sys/crypto
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/crypto/Buildfile.dirdep)
.include "${.SRCTOP}/sys/crypto/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/ddb)
D_INC_DONE+= sys/ddb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/ddb/Buildfile.dirdep)
.include "${.SRCTOP}/sys/ddb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/dev)
D_INC_DONE+= sys/dev
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/dev/Buildfile.dirdep)
.include "${.SRCTOP}/sys/dev/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/fs)
D_INC_DONE+= sys/fs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/fs/Buildfile.dirdep)
.include "${.SRCTOP}/sys/fs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/gdb)
D_INC_DONE+= sys/gdb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/gdb/Buildfile.dirdep)
.include "${.SRCTOP}/sys/gdb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/geom)
D_INC_DONE+= sys/geom
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/geom/Buildfile.dirdep)
.include "${.SRCTOP}/sys/geom/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/gnu)
D_INC_DONE+= sys/gnu
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/gnu/Buildfile.dirdep)
.include "${.SRCTOP}/sys/gnu/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/i386)
D_INC_DONE+= sys/i386
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/i386/Buildfile.dirdep)
.include "${.SRCTOP}/sys/i386/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/ia64)
D_INC_DONE+= sys/ia64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/ia64/Buildfile.dirdep)
.include "${.SRCTOP}/sys/ia64/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/isa)
D_INC_DONE+= sys/isa
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/isa/Buildfile.dirdep)
.include "${.SRCTOP}/sys/isa/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/kern)
D_INC_DONE+= sys/kern
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/kern/Buildfile.dirdep)
.include "${.SRCTOP}/sys/kern/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/kgssapi)
D_INC_DONE+= sys/kgssapi
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/kgssapi/Buildfile.dirdep)
.include "${.SRCTOP}/sys/kgssapi/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/legacy)
D_INC_DONE+= sys/legacy
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/legacy/Buildfile.dirdep)
.include "${.SRCTOP}/sys/legacy/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/libkern)
D_INC_DONE+= sys/libkern
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/libkern/Buildfile.dirdep)
.include "${.SRCTOP}/sys/libkern/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/mips)
D_INC_DONE+= sys/mips
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/mips/Buildfile.dirdep)
.include "${.SRCTOP}/sys/mips/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/modules)
D_INC_DONE+= sys/modules
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/modules/Buildfile.dirdep)
.include "${.SRCTOP}/sys/modules/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/net)
D_INC_DONE+= sys/net
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/net/Buildfile.dirdep)
.include "${.SRCTOP}/sys/net/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/net80211)
D_INC_DONE+= sys/net80211
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/net80211/Buildfile.dirdep)
.include "${.SRCTOP}/sys/net80211/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netatalk)
D_INC_DONE+= sys/netatalk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netatalk/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netatalk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netgraph)
D_INC_DONE+= sys/netgraph
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netgraph/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netgraph/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netinet)
D_INC_DONE+= sys/netinet
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netinet/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netinet/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netinet6)
D_INC_DONE+= sys/netinet6
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netinet6/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netinet6/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netipsec)
D_INC_DONE+= sys/netipsec
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netipsec/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netipsec/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netipx)
D_INC_DONE+= sys/netipx
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netipx/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netipx/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netnatm)
D_INC_DONE+= sys/netnatm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netnatm/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netnatm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netncp)
D_INC_DONE+= sys/netncp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netncp/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netncp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/netsmb)
D_INC_DONE+= sys/netsmb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/netsmb/Buildfile.dirdep)
.include "${.SRCTOP}/sys/netsmb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/nfs)
D_INC_DONE+= sys/nfs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/nfs/Buildfile.dirdep)
.include "${.SRCTOP}/sys/nfs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/nfs4client)
D_INC_DONE+= sys/nfs4client
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/nfs4client/Buildfile.dirdep)
.include "${.SRCTOP}/sys/nfs4client/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/nfsclient)
D_INC_DONE+= sys/nfsclient
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/nfsclient/Buildfile.dirdep)
.include "${.SRCTOP}/sys/nfsclient/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/nfsserver)
D_INC_DONE+= sys/nfsserver
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/nfsserver/Buildfile.dirdep)
.include "${.SRCTOP}/sys/nfsserver/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/nlm)
D_INC_DONE+= sys/nlm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/nlm/Buildfile.dirdep)
.include "${.SRCTOP}/sys/nlm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/opencrypto)
D_INC_DONE+= sys/opencrypto
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/opencrypto/Buildfile.dirdep)
.include "${.SRCTOP}/sys/opencrypto/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/pc98)
D_INC_DONE+= sys/pc98
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/pc98/Buildfile.dirdep)
.include "${.SRCTOP}/sys/pc98/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/pci)
D_INC_DONE+= sys/pci
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/pci/Buildfile.dirdep)
.include "${.SRCTOP}/sys/pci/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/powerpc)
D_INC_DONE+= sys/powerpc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/powerpc/Buildfile.dirdep)
.include "${.SRCTOP}/sys/powerpc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/rpc)
D_INC_DONE+= sys/rpc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/rpc/Buildfile.dirdep)
.include "${.SRCTOP}/sys/rpc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/security)
D_INC_DONE+= sys/security
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/security/Buildfile.dirdep)
.include "${.SRCTOP}/sys/security/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/sparc64)
D_INC_DONE+= sys/sparc64
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/sparc64/Buildfile.dirdep)
.include "${.SRCTOP}/sys/sparc64/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/sun4v)
D_INC_DONE+= sys/sun4v
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/sun4v/Buildfile.dirdep)
.include "${.SRCTOP}/sys/sun4v/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/sys)
D_INC_DONE+= sys/sys
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/sys/Buildfile.dirdep)
.include "${.SRCTOP}/sys/sys/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/tools)
D_INC_DONE+= sys/tools
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/tools/Buildfile.dirdep)
.include "${.SRCTOP}/sys/tools/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/ufs)
D_INC_DONE+= sys/ufs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/ufs/Buildfile.dirdep)
.include "${.SRCTOP}/sys/ufs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/vm)
D_INC_DONE+= sys/vm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/vm/Buildfile.dirdep)
.include "${.SRCTOP}/sys/vm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/xdr)
D_INC_DONE+= sys/xdr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/xdr/Buildfile.dirdep)
.include "${.SRCTOP}/sys/xdr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Msys/xen)
D_INC_DONE+= sys/xen
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/sys/xen/Buildfile.dirdep)
.include "${.SRCTOP}/sys/xen/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/sys/amd64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/amd64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/arm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/arm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/boot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/boot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/bsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/bsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/cam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/cam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/cddl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/cddl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/compat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/compat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/conf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/conf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/contrib/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/contrib/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/crypto/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/crypto/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ddb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ddb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/dev/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/dev/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/fs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/fs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/gdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/gdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/geom/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/geom/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/gnu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/gnu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/i386/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/i386/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ia64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ia64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/isa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/isa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/kern/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/kern/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/kgssapi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/kgssapi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/legacy/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/legacy/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/libkern/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/libkern/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/mips/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/mips/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/modules/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/modules/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/net/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/net/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/net80211/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/net80211/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netatalk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netatalk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netgraph/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netgraph/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet6/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet6/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netipsec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netipsec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netipx/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netipx/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netnatm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netnatm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netncp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netncp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netsmb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netsmb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfs4client/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfs4client/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfsclient/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfsclient/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfsserver/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfsserver/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nlm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nlm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/opencrypto/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/opencrypto/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/pc98/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/pc98/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/pci/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/pci/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/powerpc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/powerpc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/rpc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/rpc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/security/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/security/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sparc64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sparc64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sun4v/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sun4v/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sys/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sys/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/tools/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/tools/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ufs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ufs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/vm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/vm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/xdr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/xdr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/xen/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/xen/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/sys/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/sys
	cd ${.SRCTOP}/sys && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
