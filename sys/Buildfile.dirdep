# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
dirdep := ${.SRCTOP}/sys/amd64/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/arm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/boot/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/bsm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/cam/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/cddl/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/compat/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/conf/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/contrib/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/crypto/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/ddb/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/dev/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/fs/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/gdb/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/geom/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/gnu/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/i386/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/ia64/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/isa/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/kern/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/kgssapi/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/legacy/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/libkern/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/mips/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/modules/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/net/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/net80211/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netatalk/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netgraph/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netinet/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netinet6/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netipsec/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netipx/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netnatm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netncp/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/netsmb/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/nfs/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/nfs4client/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/nfsclient/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/nfsserver/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/nlm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/opencrypto/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/pc98/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/pci/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/powerpc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/rpc/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/security/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/sparc64/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/sun4v/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/sys/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/tools/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/ufs/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/vm/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/xdr/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

dirdep := ${.SRCTOP}/sys/xen/Buildfile.dirdep
.if empty(.MAKEFILE_LIST:M${dirdep})
.if exists(${dirdep})
.include "${dirdep}"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/sys/amd64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/amd64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/arm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/arm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/boot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/boot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/bsm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/bsm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/cam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/cam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/cddl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/cddl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/compat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/compat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/conf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/conf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/contrib/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/contrib/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/crypto/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/crypto/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ddb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ddb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/dev/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/dev/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/fs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/fs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/gdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/gdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/geom/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/geom/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/gnu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/gnu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/i386/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/i386/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ia64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ia64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/isa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/isa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/kern/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/kern/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/kgssapi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/kgssapi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/legacy/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/legacy/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/libkern/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/libkern/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/mips/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/mips/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/modules/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/modules/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/net/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/net/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/net80211/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/net80211/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netatalk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netatalk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netgraph/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netgraph/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netinet6/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netinet6/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netipsec/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netipsec/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netipx/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netipx/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netnatm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netnatm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netncp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netncp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/netsmb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/netsmb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfs4client/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfs4client/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfsclient/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfsclient/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nfsserver/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nfsserver/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/nlm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/nlm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/opencrypto/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/opencrypto/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/pc98/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/pc98/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/pci/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/pci/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/powerpc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/powerpc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/rpc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/rpc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/security/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/security/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sparc64/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sparc64/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sun4v/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sun4v/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/sys/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/sys/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/tools/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/tools/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/ufs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/ufs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/vm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/vm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/xdr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/xdr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/sys/xen/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/sys/xen/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/sys/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/sys
	cd ${.SRCTOP}/sys && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
