/*
 * System call prototypes.
 *
 * DO NOT EDIT-- this file is automatically generated.
 * $FreeBSD$
 * created from FreeBSD: projects/arm_eabi/sys/compat/arm/syscalls.master 211797 2010-08-25 07:30:33Z andrew 
 */

#ifndef _FREEBSD32_SYSPROTO_H_
#define	_FREEBSD32_SYSPROTO_H_

#include <sys/signal.h>
#include <sys/acl.h>
#include <sys/cpuset.h>
#include <sys/_semaphore.h>
#include <sys/ucontext.h>

#include <bsm/audit_kevents.h>

struct proc;

struct thread;

#define	PAD_(t)	(sizeof(register_t) <= sizeof(t) ? \
		0 : sizeof(register_t) - sizeof(t))

#if BYTE_ORDER == LITTLE_ENDIAN
#define	PADL_(t)	0
#define	PADR_(t)	PAD_(t)
#else
#define	PADL_(t)	PAD_(t)
#define	PADR_(t)	0
#endif

struct freebsd_oabi_wait4_args {
	char pid_l_[PADL_(int)]; int pid; char pid_r_[PADR_(int)];
	char status_l_[PADL_(int *)]; int * status; char status_r_[PADR_(int *)];
	char options_l_[PADL_(int)]; int options; char options_r_[PADR_(int)];
	char rusage_l_[PADL_(struct rusage_oabi *)]; struct rusage_oabi * rusage; char rusage_r_[PADR_(struct rusage_oabi *)];
};
struct freebsd_oabi_setitimer_args {
	char which_l_[PADL_(u_int)]; u_int which; char which_r_[PADR_(u_int)];
	char itv_l_[PADL_(struct itimerval_oabi *)]; struct itimerval_oabi * itv; char itv_r_[PADR_(struct itimerval_oabi *)];
	char oitv_l_[PADL_(struct itimerval_oabi *)]; struct itimerval_oabi * oitv; char oitv_r_[PADR_(struct itimerval_oabi *)];
};
struct freebsd_oabi_getitimer_args {
	char which_l_[PADL_(u_int)]; u_int which; char which_r_[PADR_(u_int)];
	char itv_l_[PADL_(struct itimerval_oabi *)]; struct itimerval_oabi * itv; char itv_r_[PADR_(struct itimerval_oabi *)];
};
struct freebsd_oabi_select_args {
	char nd_l_[PADL_(int)]; int nd; char nd_r_[PADR_(int)];
	char in_l_[PADL_(fd_set *)]; fd_set * in; char in_r_[PADR_(fd_set *)];
	char ou_l_[PADL_(fd_set *)]; fd_set * ou; char ou_r_[PADR_(fd_set *)];
	char ex_l_[PADL_(fd_set *)]; fd_set * ex; char ex_r_[PADR_(fd_set *)];
	char tv_l_[PADL_(struct timeval_oabi *)]; struct timeval_oabi * tv; char tv_r_[PADR_(struct timeval_oabi *)];
};
struct freebsd_oabi_gettimeofday_args {
	char tp_l_[PADL_(struct timeval_oabi *)]; struct timeval_oabi * tp; char tp_r_[PADR_(struct timeval_oabi *)];
	char tzp_l_[PADL_(struct timezone *)]; struct timezone * tzp; char tzp_r_[PADR_(struct timezone *)];
};
struct freebsd_oabi_getrusage_args {
	char who_l_[PADL_(int)]; int who; char who_r_[PADR_(int)];
	char rusage_l_[PADL_(struct rusage_oabi *)]; struct rusage_oabi * rusage; char rusage_r_[PADR_(struct rusage_oabi *)];
};
struct freebsd_oabi_settimeofday_args {
	char tv_l_[PADL_(struct timeval_oabi *)]; struct timeval_oabi * tv; char tv_r_[PADR_(struct timeval_oabi *)];
	char tzp_l_[PADL_(struct timezone *)]; struct timezone * tzp; char tzp_r_[PADR_(struct timezone *)];
};
struct freebsd_oabi_utimes_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char tptr_l_[PADL_(struct timeval32 *)]; struct timeval32 * tptr; char tptr_r_[PADR_(struct timeval32 *)];
};
struct freebsd_oabi_adjtime_args {
	char delta_l_[PADL_(struct timeval32 *)]; struct timeval32 * delta; char delta_r_[PADR_(struct timeval32 *)];
	char olddelta_l_[PADL_(struct timeval32 *)]; struct timeval32 * olddelta; char olddelta_r_[PADR_(struct timeval32 *)];
};
struct freebsd_oabi_semsys_args {
	char which_l_[PADL_(int)]; int which; char which_r_[PADR_(int)];
	char a2_l_[PADL_(int)]; int a2; char a2_r_[PADR_(int)];
	char a3_l_[PADL_(int)]; int a3; char a3_r_[PADR_(int)];
	char a4_l_[PADL_(int)]; int a4; char a4_r_[PADR_(int)];
	char a5_l_[PADL_(int)]; int a5; char a5_r_[PADR_(int)];
};
struct freebsd_oabi_msgsys_args {
	char which_l_[PADL_(int)]; int which; char which_r_[PADR_(int)];
	char a2_l_[PADL_(int)]; int a2; char a2_r_[PADR_(int)];
	char a3_l_[PADL_(int)]; int a3; char a3_r_[PADR_(int)];
	char a4_l_[PADL_(int)]; int a4; char a4_r_[PADR_(int)];
	char a5_l_[PADL_(int)]; int a5; char a5_r_[PADR_(int)];
	char a6_l_[PADL_(int)]; int a6; char a6_r_[PADR_(int)];
};
struct freebsd_oabi_shmsys_args {
	char which_l_[PADL_(uint32_t)]; uint32_t which; char which_r_[PADR_(uint32_t)];
	char a2_l_[PADL_(uint32_t)]; uint32_t a2; char a2_r_[PADR_(uint32_t)];
	char a3_l_[PADL_(uint32_t)]; uint32_t a3; char a3_r_[PADR_(uint32_t)];
	char a4_l_[PADL_(uint32_t)]; uint32_t a4; char a4_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_stat_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char ub_l_[PADL_(struct stat_oabi *)]; struct stat_oabi * ub; char ub_r_[PADR_(struct stat_oabi *)];
};
struct freebsd_oabi_fstat_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char ub_l_[PADL_(struct stat_oabi *)]; struct stat_oabi * ub; char ub_r_[PADR_(struct stat_oabi *)];
};
struct freebsd_oabi_lstat_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char ub_l_[PADL_(struct stat_oabi *)]; struct stat_oabi * ub; char ub_r_[PADR_(struct stat_oabi *)];
};
struct freebsd_oabi_futimes_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char tptr_l_[PADL_(struct timeval32 *)]; struct timeval32 * tptr; char tptr_r_[PADR_(struct timeval32 *)];
};
struct freebsd_oabi_msgsnd_args {
	char msqid_l_[PADL_(int)]; int msqid; char msqid_r_[PADR_(int)];
	char msgp_l_[PADL_(void *)]; void * msgp; char msgp_r_[PADR_(void *)];
	char msgsz_l_[PADL_(size_t)]; size_t msgsz; char msgsz_r_[PADR_(size_t)];
	char msgflg_l_[PADL_(int)]; int msgflg; char msgflg_r_[PADR_(int)];
};
struct freebsd_oabi_msgrcv_args {
	char msqid_l_[PADL_(int)]; int msqid; char msqid_r_[PADR_(int)];
	char msgp_l_[PADL_(void *)]; void * msgp; char msgp_r_[PADR_(void *)];
	char msgsz_l_[PADL_(size_t)]; size_t msgsz; char msgsz_r_[PADR_(size_t)];
	char msgtyp_l_[PADL_(long)]; long msgtyp; char msgtyp_r_[PADR_(long)];
	char msgflg_l_[PADL_(int)]; int msgflg; char msgflg_r_[PADR_(int)];
};
struct freebsd_oabi_clock_gettime_args {
	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
	char tp_l_[PADL_(struct timespec_oabi *)]; struct timespec_oabi * tp; char tp_r_[PADR_(struct timespec_oabi *)];
};
struct freebsd_oabi_clock_settime_args {
	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
	char tp_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * tp; char tp_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_clock_getres_args {
	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
	char tp_l_[PADL_(struct timespec_oabi *)]; struct timespec_oabi * tp; char tp_r_[PADR_(struct timespec_oabi *)];
};
struct freebsd_oabi_nanosleep_args {
	char rqtp_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * rqtp; char rqtp_r_[PADR_(const struct timespec_oabi *)];
	char rmtp_l_[PADL_(struct timespec_oabi *)]; struct timespec_oabi * rmtp; char rmtp_r_[PADR_(struct timespec_oabi *)];
};
struct freebsd_oabi_aio_read_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_aio_write_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_lio_listio_args {
	char mode_l_[PADL_(int)]; int mode; char mode_r_[PADR_(int)];
	char acb_list_l_[PADL_(struct aiocb_oabi *const *)]; struct aiocb_oabi *const * acb_list; char acb_list_r_[PADR_(struct aiocb_oabi *const *)];
	char nent_l_[PADL_(int)]; int nent; char nent_r_[PADR_(int)];
	char sig_l_[PADL_(struct sigevent *)]; struct sigevent * sig; char sig_r_[PADR_(struct sigevent *)];
};
struct freebsd_oabi_lutimes_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char tptr_l_[PADL_(struct timeval32 *)]; struct timeval32 * tptr; char tptr_r_[PADR_(struct timeval32 *)];
};
struct freebsd_oabi_preadv_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char iovp_l_[PADL_(struct iovec *)]; struct iovec * iovp; char iovp_r_[PADR_(struct iovec *)];
	char iovcnt_l_[PADL_(u_int)]; u_int iovcnt; char iovcnt_r_[PADR_(u_int)];
	char offset1_l_[PADL_(uint32_t)]; uint32_t offset1; char offset1_r_[PADR_(uint32_t)];
	char offset2_l_[PADL_(uint32_t)]; uint32_t offset2; char offset2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_pwritev_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char iovp_l_[PADL_(struct iovec *)]; struct iovec * iovp; char iovp_r_[PADR_(struct iovec *)];
	char iovcnt_l_[PADL_(u_int)]; u_int iovcnt; char iovcnt_r_[PADR_(u_int)];
	char offset1_l_[PADL_(uint32_t)]; uint32_t offset1; char offset1_r_[PADR_(uint32_t)];
	char offset2_l_[PADL_(uint32_t)]; uint32_t offset2; char offset2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_aio_return_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_aio_suspend_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi *const *)]; struct aiocb_oabi *const * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *const *)];
	char nent_l_[PADL_(int)]; int nent; char nent_r_[PADR_(int)];
	char timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * timeout; char timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_aio_cancel_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_aio_error_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_oaio_read_args {
	char aiocbp_l_[PADL_(struct oaiocb32 *)]; struct oaiocb32 * aiocbp; char aiocbp_r_[PADR_(struct oaiocb32 *)];
};
struct freebsd_oabi_oaio_write_args {
	char aiocbp_l_[PADL_(struct oaiocb32 *)]; struct oaiocb32 * aiocbp; char aiocbp_r_[PADR_(struct oaiocb32 *)];
};
struct freebsd_oabi_olio_listio_args {
	char mode_l_[PADL_(int)]; int mode; char mode_r_[PADR_(int)];
	char acb_list_l_[PADL_(struct oaiocb32 *const *)]; struct oaiocb32 *const * acb_list; char acb_list_r_[PADR_(struct oaiocb32 *const *)];
	char nent_l_[PADL_(int)]; int nent; char nent_r_[PADR_(int)];
	char sig_l_[PADL_(struct osigevent32 *)]; struct osigevent32 * sig; char sig_r_[PADR_(struct osigevent32 *)];
};
struct freebsd_oabi_sched_rr_get_interval_args {
	char pid_l_[PADL_(pid_t)]; pid_t pid; char pid_r_[PADR_(pid_t)];
	char interval_l_[PADL_(struct timespec_oabi *)]; struct timespec_oabi * interval; char interval_r_[PADR_(struct timespec_oabi *)];
};
struct freebsd_oabi_sigtimedwait_args {
	char set_l_[PADL_(const sigset_t *)]; const sigset_t * set; char set_r_[PADR_(const sigset_t *)];
	char info_l_[PADL_(siginfo_t *)]; siginfo_t * info; char info_r_[PADR_(siginfo_t *)];
	char timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * timeout; char timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_aio_waitcomplete_args {
	char aiocbp_l_[PADL_(struct aiocb_oabi **)]; struct aiocb_oabi ** aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi **)];
	char timeout_l_[PADL_(struct timespec_oabi *)]; struct timespec_oabi * timeout; char timeout_r_[PADR_(struct timespec_oabi *)];
};
struct freebsd_oabi_kevent_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char changelist_l_[PADL_(const struct kevent *)]; const struct kevent * changelist; char changelist_r_[PADR_(const struct kevent *)];
	char nchanges_l_[PADL_(int)]; int nchanges; char nchanges_r_[PADR_(int)];
	char eventlist_l_[PADL_(struct kevent *)]; struct kevent * eventlist; char eventlist_r_[PADR_(struct kevent *)];
	char nevents_l_[PADL_(int)]; int nevents; char nevents_r_[PADR_(int)];
	char timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * timeout; char timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_ksem_init_args {
	char idp_l_[PADL_(semid_t *)]; semid_t * idp; char idp_r_[PADR_(semid_t *)];
	char value_l_[PADL_(unsigned int)]; unsigned int value; char value_r_[PADR_(unsigned int)];
};
struct freebsd_oabi_ksem_open_args {
	char idp_l_[PADL_(semid_t *)]; semid_t * idp; char idp_r_[PADR_(semid_t *)];
	char name_l_[PADL_(const char *)]; const char * name; char name_r_[PADR_(const char *)];
	char oflag_l_[PADL_(int)]; int oflag; char oflag_r_[PADR_(int)];
	char mode_l_[PADL_(mode_t)]; mode_t mode; char mode_r_[PADR_(mode_t)];
	char value_l_[PADL_(unsigned int)]; unsigned int value; char value_r_[PADR_(unsigned int)];
};
struct freebsd_oabi_ksem_timedwait_args {
	char id_l_[PADL_(semid_t)]; semid_t id; char id_r_[PADR_(semid_t)];
	char abstime_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * abstime; char abstime_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_thr_suspend_args {
	char timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * timeout; char timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_kmq_timedreceive_args {
	char mqd_l_[PADL_(int)]; int mqd; char mqd_r_[PADR_(int)];
	char msg_ptr_l_[PADL_(char *)]; char * msg_ptr; char msg_ptr_r_[PADR_(char *)];
	char msg_len_l_[PADL_(size_t)]; size_t msg_len; char msg_len_r_[PADR_(size_t)];
	char msg_prio_l_[PADL_(unsigned *)]; unsigned * msg_prio; char msg_prio_r_[PADR_(unsigned *)];
	char abs_timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * abs_timeout; char abs_timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_kmq_timedsend_args {
	char mqd_l_[PADL_(int)]; int mqd; char mqd_r_[PADR_(int)];
	char msg_ptr_l_[PADL_(const char *)]; const char * msg_ptr; char msg_ptr_r_[PADR_(const char *)];
	char msg_len_l_[PADL_(size_t)]; size_t msg_len; char msg_len_r_[PADR_(size_t)];
	char msg_prio_l_[PADL_(unsigned)]; unsigned msg_prio; char msg_prio_r_[PADR_(unsigned)];
	char abs_timeout_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * abs_timeout; char abs_timeout_r_[PADR_(const struct timespec_oabi *)];
};
struct freebsd_oabi_aio_fsync_args {
	char op_l_[PADL_(int)]; int op; char op_r_[PADR_(int)];
	char aiocbp_l_[PADL_(struct aiocb_oabi *)]; struct aiocb_oabi * aiocbp; char aiocbp_r_[PADR_(struct aiocb_oabi *)];
};
struct freebsd_oabi_pread_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char buf_l_[PADL_(void *)]; void * buf; char buf_r_[PADR_(void *)];
	char nbyte_l_[PADL_(size_t)]; size_t nbyte; char nbyte_r_[PADR_(size_t)];
	char offset1_l_[PADL_(uint32_t)]; uint32_t offset1; char offset1_r_[PADR_(uint32_t)];
	char offset2_l_[PADL_(uint32_t)]; uint32_t offset2; char offset2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_pwrite_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char buf_l_[PADL_(const void *)]; const void * buf; char buf_r_[PADR_(const void *)];
	char nbyte_l_[PADL_(size_t)]; size_t nbyte; char nbyte_r_[PADR_(size_t)];
	char offset1_l_[PADL_(uint32_t)]; uint32_t offset1; char offset1_r_[PADR_(uint32_t)];
	char offset2_l_[PADL_(uint32_t)]; uint32_t offset2; char offset2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_mmap_args {
	char addr_l_[PADL_(caddr_t)]; caddr_t addr; char addr_r_[PADR_(caddr_t)];
	char len_l_[PADL_(size_t)]; size_t len; char len_r_[PADR_(size_t)];
	char prot_l_[PADL_(int)]; int prot; char prot_r_[PADR_(int)];
	char flags_l_[PADL_(int)]; int flags; char flags_r_[PADR_(int)];
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char pos1_l_[PADL_(uint32_t)]; uint32_t pos1; char pos1_r_[PADR_(uint32_t)];
	char pos2_l_[PADL_(uint32_t)]; uint32_t pos2; char pos2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_lseek_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char offset1_l_[PADL_(uint32_t)]; uint32_t offset1; char offset1_r_[PADR_(uint32_t)];
	char offset2_l_[PADL_(uint32_t)]; uint32_t offset2; char offset2_r_[PADR_(uint32_t)];
	char whence_l_[PADL_(int)]; int whence; char whence_r_[PADR_(int)];
};
struct freebsd_oabi_truncate_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char length1_l_[PADL_(uint32_t)]; uint32_t length1; char length1_r_[PADR_(uint32_t)];
	char length2_l_[PADL_(uint32_t)]; uint32_t length2; char length2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_ftruncate_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char length1_l_[PADL_(uint32_t)]; uint32_t length1; char length1_r_[PADR_(uint32_t)];
	char length2_l_[PADL_(uint32_t)]; uint32_t length2; char length2_r_[PADR_(uint32_t)];
};
struct freebsd_oabi_cpuset_setid_args {
	char which_l_[PADL_(cpuwhich_t)]; cpuwhich_t which; char which_r_[PADR_(cpuwhich_t)];
	char id1_l_[PADL_(uint32_t)]; uint32_t id1; char id1_r_[PADR_(uint32_t)];
	char id2_l_[PADL_(uint32_t)]; uint32_t id2; char id2_r_[PADR_(uint32_t)];
	char setid_l_[PADL_(cpusetid_t)]; cpusetid_t setid; char setid_r_[PADR_(cpusetid_t)];
};
struct freebsd_oabi_fstatat_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char buf_l_[PADL_(struct stat *)]; struct stat * buf; char buf_r_[PADR_(struct stat *)];
	char flag_l_[PADL_(int)]; int flag; char flag_r_[PADR_(int)];
};
struct freebsd_oabi_futimesat_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char times_l_[PADL_(struct timeval *)]; struct timeval * times; char times_r_[PADR_(struct timeval *)];
};
struct freebsd_oabi_msgctl_args {
	char msqid_l_[PADL_(int)]; int msqid; char msqid_r_[PADR_(int)];
	char cmd_l_[PADL_(int)]; int cmd; char cmd_r_[PADR_(int)];
	char buf_l_[PADL_(struct msqid_ds_oabi *)]; struct msqid_ds_oabi * buf; char buf_r_[PADR_(struct msqid_ds_oabi *)];
};
struct freebsd_oabi_shmctl_args {
	char shmid_l_[PADL_(int)]; int shmid; char shmid_r_[PADR_(int)];
	char cmd_l_[PADL_(int)]; int cmd; char cmd_r_[PADR_(int)];
	char buf_l_[PADL_(struct shmid_ds32 *)]; struct shmid_ds32 * buf; char buf_r_[PADR_(struct shmid_ds32 *)];
};
struct freebsd_oabi_pselect_args {
	char nd_l_[PADL_(int)]; int nd; char nd_r_[PADR_(int)];
	char in_l_[PADL_(fd_set *)]; fd_set * in; char in_r_[PADR_(fd_set *)];
	char ou_l_[PADL_(fd_set *)]; fd_set * ou; char ou_r_[PADR_(fd_set *)];
	char ex_l_[PADL_(fd_set *)]; fd_set * ex; char ex_r_[PADR_(fd_set *)];
	char ts_l_[PADL_(const struct timespec_oabi *)]; const struct timespec_oabi * ts; char ts_r_[PADR_(const struct timespec_oabi *)];
	char sm_l_[PADL_(const sigset_t *)]; const sigset_t * sm; char sm_r_[PADR_(const sigset_t *)];
};
int	freebsd_oabi_wait4(struct thread *, struct freebsd_oabi_wait4_args *);
int	freebsd_oabi_setitimer(struct thread *, struct freebsd_oabi_setitimer_args *);
int	freebsd_oabi_getitimer(struct thread *, struct freebsd_oabi_getitimer_args *);
int	freebsd_oabi_select(struct thread *, struct freebsd_oabi_select_args *);
int	freebsd_oabi_gettimeofday(struct thread *, struct freebsd_oabi_gettimeofday_args *);
int	freebsd_oabi_getrusage(struct thread *, struct freebsd_oabi_getrusage_args *);
int	freebsd_oabi_settimeofday(struct thread *, struct freebsd_oabi_settimeofday_args *);
int	freebsd_oabi_utimes(struct thread *, struct freebsd_oabi_utimes_args *);
int	freebsd_oabi_adjtime(struct thread *, struct freebsd_oabi_adjtime_args *);
int	freebsd_oabi_semsys(struct thread *, struct freebsd_oabi_semsys_args *);
int	freebsd_oabi_msgsys(struct thread *, struct freebsd_oabi_msgsys_args *);
int	freebsd_oabi_shmsys(struct thread *, struct freebsd_oabi_shmsys_args *);
int	freebsd_oabi_stat(struct thread *, struct freebsd_oabi_stat_args *);
int	freebsd_oabi_fstat(struct thread *, struct freebsd_oabi_fstat_args *);
int	freebsd_oabi_lstat(struct thread *, struct freebsd_oabi_lstat_args *);
int	freebsd_oabi_futimes(struct thread *, struct freebsd_oabi_futimes_args *);
int	freebsd_oabi_msgsnd(struct thread *, struct freebsd_oabi_msgsnd_args *);
int	freebsd_oabi_msgrcv(struct thread *, struct freebsd_oabi_msgrcv_args *);
int	freebsd_oabi_clock_gettime(struct thread *, struct freebsd_oabi_clock_gettime_args *);
int	freebsd_oabi_clock_settime(struct thread *, struct freebsd_oabi_clock_settime_args *);
int	freebsd_oabi_clock_getres(struct thread *, struct freebsd_oabi_clock_getres_args *);
int	freebsd_oabi_nanosleep(struct thread *, struct freebsd_oabi_nanosleep_args *);
int	freebsd_oabi_aio_read(struct thread *, struct freebsd_oabi_aio_read_args *);
int	freebsd_oabi_aio_write(struct thread *, struct freebsd_oabi_aio_write_args *);
int	freebsd_oabi_lio_listio(struct thread *, struct freebsd_oabi_lio_listio_args *);
int	freebsd_oabi_lutimes(struct thread *, struct freebsd_oabi_lutimes_args *);
int	freebsd_oabi_preadv(struct thread *, struct freebsd_oabi_preadv_args *);
int	freebsd_oabi_pwritev(struct thread *, struct freebsd_oabi_pwritev_args *);
int	freebsd_oabi_aio_return(struct thread *, struct freebsd_oabi_aio_return_args *);
int	freebsd_oabi_aio_suspend(struct thread *, struct freebsd_oabi_aio_suspend_args *);
int	freebsd_oabi_aio_cancel(struct thread *, struct freebsd_oabi_aio_cancel_args *);
int	freebsd_oabi_aio_error(struct thread *, struct freebsd_oabi_aio_error_args *);
int	freebsd_oabi_oaio_read(struct thread *, struct freebsd_oabi_oaio_read_args *);
int	freebsd_oabi_oaio_write(struct thread *, struct freebsd_oabi_oaio_write_args *);
int	freebsd_oabi_olio_listio(struct thread *, struct freebsd_oabi_olio_listio_args *);
int	freebsd_oabi_sched_rr_get_interval(struct thread *, struct freebsd_oabi_sched_rr_get_interval_args *);
int	freebsd_oabi_sigtimedwait(struct thread *, struct freebsd_oabi_sigtimedwait_args *);
int	freebsd_oabi_aio_waitcomplete(struct thread *, struct freebsd_oabi_aio_waitcomplete_args *);
int	freebsd_oabi_kevent(struct thread *, struct freebsd_oabi_kevent_args *);
int	freebsd_oabi_ksem_init(struct thread *, struct freebsd_oabi_ksem_init_args *);
int	freebsd_oabi_ksem_open(struct thread *, struct freebsd_oabi_ksem_open_args *);
int	freebsd_oabi_ksem_timedwait(struct thread *, struct freebsd_oabi_ksem_timedwait_args *);
int	freebsd_oabi_thr_suspend(struct thread *, struct freebsd_oabi_thr_suspend_args *);
int	freebsd_oabi_kmq_timedreceive(struct thread *, struct freebsd_oabi_kmq_timedreceive_args *);
int	freebsd_oabi_kmq_timedsend(struct thread *, struct freebsd_oabi_kmq_timedsend_args *);
int	freebsd_oabi_aio_fsync(struct thread *, struct freebsd_oabi_aio_fsync_args *);
int	freebsd_oabi_pread(struct thread *, struct freebsd_oabi_pread_args *);
int	freebsd_oabi_pwrite(struct thread *, struct freebsd_oabi_pwrite_args *);
int	freebsd_oabi_mmap(struct thread *, struct freebsd_oabi_mmap_args *);
int	freebsd_oabi_lseek(struct thread *, struct freebsd_oabi_lseek_args *);
int	freebsd_oabi_truncate(struct thread *, struct freebsd_oabi_truncate_args *);
int	freebsd_oabi_ftruncate(struct thread *, struct freebsd_oabi_ftruncate_args *);
int	freebsd_oabi_cpuset_setid(struct thread *, struct freebsd_oabi_cpuset_setid_args *);
int	freebsd_oabi_fstatat(struct thread *, struct freebsd_oabi_fstatat_args *);
int	freebsd_oabi_futimesat(struct thread *, struct freebsd_oabi_futimesat_args *);
int	freebsd_oabi_msgctl(struct thread *, struct freebsd_oabi_msgctl_args *);
int	freebsd_oabi_shmctl(struct thread *, struct freebsd_oabi_shmctl_args *);
int	freebsd_oabi_pselect(struct thread *, struct freebsd_oabi_pselect_args *);

#ifdef COMPAT_43

struct osigaction_args {
	char signum_l_[PADL_(int)]; int signum; char signum_r_[PADR_(int)];
	char nsa_l_[PADL_(struct osigaction *)]; struct osigaction * nsa; char nsa_r_[PADR_(struct osigaction *)];
	char osa_l_[PADL_(struct osigaction *)]; struct osigaction * osa; char osa_r_[PADR_(struct osigaction *)];
};
struct ofreebsd_oabi_sigprocmask_args {
	char how_l_[PADL_(int)]; int how; char how_r_[PADR_(int)];
	char mask_l_[PADL_(osigset_t)]; osigset_t mask; char mask_r_[PADR_(osigset_t)];
};
struct ofreebsd_oabi_sigvec_args {
	char signum_l_[PADL_(int)]; int signum; char signum_r_[PADR_(int)];
	char nsv_l_[PADL_(struct sigvec *)]; struct sigvec * nsv; char nsv_r_[PADR_(struct sigvec *)];
	char osv_l_[PADL_(struct sigvec *)]; struct sigvec * osv; char osv_r_[PADR_(struct sigvec *)];
};
struct ofreebsd_oabi_sigblock_args {
	char mask_l_[PADL_(int)]; int mask; char mask_r_[PADR_(int)];
};
struct ofreebsd_oabi_sigsetmask_args {
	char mask_l_[PADL_(int)]; int mask; char mask_r_[PADR_(int)];
};
struct ofreebsd_oabi_sigsuspend_args {
	char mask_l_[PADL_(int)]; int mask; char mask_r_[PADR_(int)];
};
struct ofreebsd_oabi_sigstack_args {
	char nss_l_[PADL_(struct sigstack32 *)]; struct sigstack32 * nss; char nss_r_[PADR_(struct sigstack32 *)];
	char oss_l_[PADL_(struct sigstack32 *)]; struct sigstack32 * oss; char oss_r_[PADR_(struct sigstack32 *)];
};
int	osigaction(struct thread *, struct osigaction_args *);
int	ofreebsd_oabi_sigprocmask(struct thread *, struct ofreebsd_oabi_sigprocmask_args *);
int	ofreebsd_oabi_sigvec(struct thread *, struct ofreebsd_oabi_sigvec_args *);
int	ofreebsd_oabi_sigblock(struct thread *, struct ofreebsd_oabi_sigblock_args *);
int	ofreebsd_oabi_sigsetmask(struct thread *, struct ofreebsd_oabi_sigsetmask_args *);
int	ofreebsd_oabi_sigsuspend(struct thread *, struct ofreebsd_oabi_sigsuspend_args *);
int	ofreebsd_oabi_sigstack(struct thread *, struct ofreebsd_oabi_sigstack_args *);

#endif /* COMPAT_43 */


#ifdef COMPAT_FREEBSD4

struct freebsd4_getfsstat_args {
	char buf_l_[PADL_(struct statfs *)]; struct statfs * buf; char buf_r_[PADR_(struct statfs *)];
	char bufsize_l_[PADL_(long)]; long bufsize; char bufsize_r_[PADR_(long)];
	char flags_l_[PADL_(int)]; int flags; char flags_r_[PADR_(int)];
};
struct freebsd4_statfs_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char buf_l_[PADL_(struct statfs *)]; struct statfs * buf; char buf_r_[PADR_(struct statfs *)];
};
struct freebsd4_fstatfs_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char buf_l_[PADL_(struct statfs *)]; struct statfs * buf; char buf_r_[PADR_(struct statfs *)];
};
struct freebsd4_fhstatfs_args {
	char u_fhp_l_[PADL_(const struct fhandle *)]; const struct fhandle * u_fhp; char u_fhp_r_[PADR_(const struct fhandle *)];
	char buf_l_[PADL_(struct statfs *)]; struct statfs * buf; char buf_r_[PADR_(struct statfs *)];
};
struct freebsd4_sendfile_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char s_l_[PADL_(int)]; int s; char s_r_[PADR_(int)];
	char offset_l_[PADL_(off_t)]; off_t offset; char offset_r_[PADR_(off_t)];
	char nbytes_l_[PADL_(size_t)]; size_t nbytes; char nbytes_r_[PADR_(size_t)];
	char hdtr_l_[PADL_(struct sf_hdtr *)]; struct sf_hdtr * hdtr; char hdtr_r_[PADR_(struct sf_hdtr *)];
	char sbytes_l_[PADL_(off_t *)]; off_t * sbytes; char sbytes_r_[PADR_(off_t *)];
	char flags_l_[PADL_(int)]; int flags; char flags_r_[PADR_(int)];
};
struct freebsd4_sigaction_args {
	char sig_l_[PADL_(int)]; int sig; char sig_r_[PADR_(int)];
	char act_l_[PADL_(struct sigaction *)]; struct sigaction * act; char act_r_[PADR_(struct sigaction *)];
	char oact_l_[PADL_(struct sigaction *)]; struct sigaction * oact; char oact_r_[PADR_(struct sigaction *)];
};
struct freebsd4_freebsd_oabi_sigreturn_args {
	char sigcntxp_l_[PADL_(const struct freebsd4_freebsd_oabi_ucontext *)]; const struct freebsd4_freebsd_oabi_ucontext * sigcntxp; char sigcntxp_r_[PADR_(const struct freebsd4_freebsd_oabi_ucontext *)];
};
int	freebsd4_getfsstat(struct thread *, struct freebsd4_getfsstat_args *);
int	freebsd4_statfs(struct thread *, struct freebsd4_statfs_args *);
int	freebsd4_fstatfs(struct thread *, struct freebsd4_fstatfs_args *);
int	freebsd4_fhstatfs(struct thread *, struct freebsd4_fhstatfs_args *);
int	freebsd4_sendfile(struct thread *, struct freebsd4_sendfile_args *);
int	freebsd4_sigaction(struct thread *, struct freebsd4_sigaction_args *);
int	freebsd4_freebsd_oabi_sigreturn(struct thread *, struct freebsd4_freebsd_oabi_sigreturn_args *);

#endif /* COMPAT_FREEBSD4 */


#ifdef COMPAT_FREEBSD6

struct freebsd6_freebsd6_pread_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char buf_l_[PADL_(void *)]; void * buf; char buf_r_[PADR_(void *)];
	char nbyte_l_[PADL_(size_t)]; size_t nbyte; char nbyte_r_[PADR_(size_t)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char offset_l_[PADL_(off_t)]; off_t offset; char offset_r_[PADR_(off_t)];
};
struct freebsd6_freebsd6_pwrite_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char buf_l_[PADL_(const void *)]; const void * buf; char buf_r_[PADR_(const void *)];
	char nbyte_l_[PADL_(size_t)]; size_t nbyte; char nbyte_r_[PADR_(size_t)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char offset_l_[PADL_(off_t)]; off_t offset; char offset_r_[PADR_(off_t)];
};
struct freebsd6_freebsd6_mmap_args {
	char addr_l_[PADL_(caddr_t)]; caddr_t addr; char addr_r_[PADR_(caddr_t)];
	char len_l_[PADL_(size_t)]; size_t len; char len_r_[PADR_(size_t)];
	char prot_l_[PADL_(int)]; int prot; char prot_r_[PADR_(int)];
	char flags_l_[PADL_(int)]; int flags; char flags_r_[PADR_(int)];
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char pos_l_[PADL_(off_t)]; off_t pos; char pos_r_[PADR_(off_t)];
};
struct freebsd6_freebsd6_lseek_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char offset_l_[PADL_(off_t)]; off_t offset; char offset_r_[PADR_(off_t)];
	char whence_l_[PADL_(int)]; int whence; char whence_r_[PADR_(int)];
};
struct freebsd6_freebsd6_truncate_args {
	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char length_l_[PADL_(off_t)]; off_t length; char length_r_[PADR_(off_t)];
};
struct freebsd6_freebsd6_ftruncate_args {
	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
	char pad_l_[PADL_(int)]; int pad; char pad_r_[PADR_(int)];
	char length_l_[PADL_(off_t)]; off_t length; char length_r_[PADR_(off_t)];
};
int	freebsd6_freebsd6_pread(struct thread *, struct freebsd6_freebsd6_pread_args *);
int	freebsd6_freebsd6_pwrite(struct thread *, struct freebsd6_freebsd6_pwrite_args *);
int	freebsd6_freebsd6_mmap(struct thread *, struct freebsd6_freebsd6_mmap_args *);
int	freebsd6_freebsd6_lseek(struct thread *, struct freebsd6_freebsd6_lseek_args *);
int	freebsd6_freebsd6_truncate(struct thread *, struct freebsd6_freebsd6_truncate_args *);
int	freebsd6_freebsd6_ftruncate(struct thread *, struct freebsd6_freebsd6_ftruncate_args *);

#endif /* COMPAT_FREEBSD6 */


#ifdef COMPAT_FREEBSD7

struct freebsd7___semctl_args {
	char semid_l_[PADL_(int)]; int semid; char semid_r_[PADR_(int)];
	char semnum_l_[PADL_(int)]; int semnum; char semnum_r_[PADR_(int)];
	char cmd_l_[PADL_(int)]; int cmd; char cmd_r_[PADR_(int)];
	char arg_l_[PADL_(union semun *)]; union semun * arg; char arg_r_[PADR_(union semun *)];
};
struct freebsd7_freebsd_oabi_msgctl_args {
	char msqid_l_[PADL_(int)]; int msqid; char msqid_r_[PADR_(int)];
	char cmd_l_[PADL_(int)]; int cmd; char cmd_r_[PADR_(int)];
	char buf_l_[PADL_(struct msqid_ds32_old *)]; struct msqid_ds32_old * buf; char buf_r_[PADR_(struct msqid_ds32_old *)];
};
struct freebsd7_freebsd_oabi_shmctl_args {
	char shmid_l_[PADL_(int)]; int shmid; char shmid_r_[PADR_(int)];
	char cmd_l_[PADL_(int)]; int cmd; char cmd_r_[PADR_(int)];
	char buf_l_[PADL_(struct shmid_ds32_old *)]; struct shmid_ds32_old * buf; char buf_r_[PADR_(struct shmid_ds32_old *)];
};
int	freebsd7___semctl(struct thread *, struct freebsd7___semctl_args *);
int	freebsd7_freebsd_oabi_msgctl(struct thread *, struct freebsd7_freebsd_oabi_msgctl_args *);
int	freebsd7_freebsd_oabi_shmctl(struct thread *, struct freebsd7_freebsd_oabi_shmctl_args *);

#endif /* COMPAT_FREEBSD7 */

#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_wait4	AUE_WAIT4
#define	FREEBSD_OABI_SYS_AUE_freebsd4_getfsstat	AUE_GETFSSTAT
#define	FREEBSD_OABI_SYS_AUE_osigaction	AUE_SIGACTION
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigprocmask	AUE_SIGPROCMASK
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_setitimer	AUE_SETITIMER
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_getitimer	AUE_GETITIMER
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_select	AUE_SELECT
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigvec	AUE_O_SIGVEC
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigblock	AUE_O_SIGBLOCK
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigsetmask	AUE_O_SIGSETMASK
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigsuspend	AUE_SIGSUSPEND
#define	FREEBSD_OABI_SYS_AUE_ofreebsd_oabi_sigstack	AUE_O_SIGSTACK
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_gettimeofday	AUE_GETTIMEOFDAY
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_getrusage	AUE_GETRUSAGE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_settimeofday	AUE_SETTIMEOFDAY
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_utimes	AUE_UTIMES
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_adjtime	AUE_ADJTIME
#define	FREEBSD_OABI_SYS_AUE_freebsd4_statfs	AUE_STATFS
#define	FREEBSD_OABI_SYS_AUE_freebsd4_fstatfs	AUE_FSTATFS
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_semsys	AUE_SEMSYS
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_msgsys	AUE_MSGSYS
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_shmsys	AUE_SHMSYS
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_pread	AUE_PREAD
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_pwrite	AUE_PWRITE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_stat	AUE_STAT
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_fstat	AUE_FSTAT
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_lstat	AUE_LSTAT
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_mmap	AUE_MMAP
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_lseek	AUE_LSEEK
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_truncate	AUE_TRUNCATE
#define	FREEBSD_OABI_SYS_AUE_freebsd6_freebsd6_ftruncate	AUE_FTRUNCATE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_futimes	AUE_FUTIMES
#define	FREEBSD_OABI_SYS_AUE_freebsd7___semctl	AUE_SEMCTL
#define	FREEBSD_OABI_SYS_AUE_freebsd7_freebsd_oabi_msgctl	AUE_MSGCTL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_msgsnd	AUE_MSGSND
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_msgrcv	AUE_MSGRCV
#define	FREEBSD_OABI_SYS_AUE_freebsd7_freebsd_oabi_shmctl	AUE_SHMCTL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_clock_gettime	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_clock_settime	AUE_CLOCK_SETTIME
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_clock_getres	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_nanosleep	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_read	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_write	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_lio_listio	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_lutimes	AUE_LUTIMES
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_preadv	AUE_PREADV
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_pwritev	AUE_PWRITEV
#define	FREEBSD_OABI_SYS_AUE_freebsd4_fhstatfs	AUE_FHSTATFS
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_return	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_suspend	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_cancel	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_error	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_oaio_read	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_oaio_write	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_olio_listio	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_sched_rr_get_interval	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd4_sendfile	AUE_SENDFILE
#define	FREEBSD_OABI_SYS_AUE_freebsd4_sigaction	AUE_SIGACTION
#define	FREEBSD_OABI_SYS_AUE_freebsd4_freebsd_oabi_sigreturn	AUE_SIGRETURN
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_sigtimedwait	AUE_SIGWAIT
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_waitcomplete	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_kevent	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_ksem_init	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_ksem_open	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_ksem_timedwait	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_thr_suspend	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_kmq_timedreceive	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_kmq_timedsend	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_aio_fsync	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_pread	AUE_PREAD
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_pwrite	AUE_PWRITE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_mmap	AUE_MMAP
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_lseek	AUE_LSEEK
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_truncate	AUE_TRUNCATE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_ftruncate	AUE_FTRUNCATE
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_cpuset_setid	AUE_NULL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_fstatat	AUE_FSTATAT
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_futimesat	AUE_FUTIMESAT
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_msgctl	AUE_MSGCTL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_shmctl	AUE_SHMCTL
#define	FREEBSD_OABI_SYS_AUE_freebsd_oabi_pselect	AUE_SELECT

#undef PAD_
#undef PADL_
#undef PADR_

#endif /* !_FREEBSD32_SYSPROTO_H_ */
