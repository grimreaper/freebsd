# $FreeBSD$

.PATH: ${BSDSRCTOP}/bin/sh
.PATH: ${BSDSRCTOP}/bin/sh/bltin
.PATH: ${BSDSRCTOP}/bin/test

PROG = sh

SRCS = \
	alias.c \
	arith_lex.l \
	cd.c \
	echo.c \
	error.c \
	eval.c \
	exec.c \
	expand.c \
	histedit.c \
	input.c \
	jobs.c \
	mail.c \
	main.c \
	memalloc.c \
	miscbltin.c \
	mystring.c \
	options.c \
	output.c \
	parser.c \
	redir.c \
	show.c \
	test.c \
	trap.c \
	var.c \
	xarith.y

GENSRCS = builtins.c init.c nodes.c syntax.c
GENHDRS = builtins.h nodes.h syntax.h token.h
SRCS += ${GENHDRS} ${GENSRCS}

CFLAGS += -DSHELL -I. -I${.CURDIR}

# for debug:
# CFLAGS+= -g -DDEBUG=2
WARNS ?= 2
WFORMAT = 0
W_error =

LDADD += -ll -ledit -lncurses

# 8-bit lex scanner for arithmetic
LFLAGS = -8

xarith.y: arith.y
	cp ${.ALLSRC} ${.TARGET}

builtins.c builtins.h: builtins.def
	cd ${.CURDIR} && ${SHELL} ${BSDSRCTOP}/bin/sh/mkbuiltins ${.OBJDIR}

init.c: alias.c eval.c exec.c input.c jobs.c options.c parser.c redir.c trap.c var.c
	${HOSTTOOL_STAGEDIR}/buildtools/mkinit ${.ALLSRC:S/^mkinit$//}

nodes.c nodes.h: nodetypes nodes.c.pat
	${HOSTTOOL_STAGEDIR}/buildtools/mknodes ${BSDSRCTOP}/bin/sh/nodetypes ${BSDSRCTOP}/bin/sh/nodes.c.pat

syntax.c syntax.h:
	${HOSTTOOL_STAGEDIR}/buildtools/mksyntax

token.h:
	${SHELL} ${BSDSRCTOP}/bin/sh/mktokens

.include <bsd.prog.mk>
