# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  gnu/lib/csu gnu/lib/libdialog gnu/lib/libg2c gnu/lib/libgcc gnu/lib/libgcov gnu/lib/libgomp gnu/lib/libiberty gnu/lib/libobjc gnu/lib/libreadline gnu/lib/libregex gnu/lib/libssp gnu/lib/libstdc++ gnu/lib/libsupc++
.if empty(D_INC_DONE:Mgnu/lib/csu)
D_INC_DONE+= gnu/lib/csu
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/csu/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/csu/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libdialog)
D_INC_DONE+= gnu/lib/libdialog
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libdialog/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libdialog/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libg2c)
D_INC_DONE+= gnu/lib/libg2c
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libg2c/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libg2c/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libgcc)
D_INC_DONE+= gnu/lib/libgcc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libgcc/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libgcc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libgcov)
D_INC_DONE+= gnu/lib/libgcov
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libgcov/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libgcov/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libgomp)
D_INC_DONE+= gnu/lib/libgomp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libgomp/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libgomp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libiberty)
D_INC_DONE+= gnu/lib/libiberty
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libiberty/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libiberty/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libobjc)
D_INC_DONE+= gnu/lib/libobjc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libobjc/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libobjc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libreadline)
D_INC_DONE+= gnu/lib/libreadline
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libreadline/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libreadline/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libregex)
D_INC_DONE+= gnu/lib/libregex
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libregex/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libregex/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libssp)
D_INC_DONE+= gnu/lib/libssp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libssp/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libssp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libstdc++)
D_INC_DONE+= gnu/lib/libstdc++
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libstdc++/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libstdc++/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Mgnu/lib/libsupc++)
D_INC_DONE+= gnu/lib/libsupc++
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/gnu/lib/libsupc++/Buildfile.dirdep)
.include "${.SRCTOP}/gnu/lib/libsupc++/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/gnu/lib/csu/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/csu/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libdialog/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libdialog/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libg2c/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libg2c/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libgcc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libgcc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libgcov/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libgcov/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libgomp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libgomp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libiberty/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libiberty/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libobjc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libobjc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libreadline/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libreadline/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libregex/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libregex/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libssp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libssp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libstdc++/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libstdc++/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/gnu/lib/libsupc++/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/gnu/lib/libsupc++/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/gnu/lib/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/gnu/lib
	cd ${.SRCTOP}/gnu/lib && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
