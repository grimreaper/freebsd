# This file is automatically generated. DO NOT EDIT!
.if !defined(NODIRDEP)
# DIRDEP=  usr.bin/alias usr.bin/apply usr.bin/ar usr.bin/asa usr.bin/at usr.bin/atm usr.bin/awk usr.bin/banner usr.bin/basename usr.bin/biff usr.bin/bluetooth usr.bin/brandelf usr.bin/bsdiff usr.bin/bzip2 usr.bin/bzip2recover usr.bin/c89 usr.bin/c99 usr.bin/calendar usr.bin/cap_mkdb usr.bin/catman usr.bin/chat usr.bin/checknr usr.bin/chkey usr.bin/chpass usr.bin/cksum usr.bin/cmp usr.bin/col usr.bin/colcrt usr.bin/colldef usr.bin/colrm usr.bin/column usr.bin/comm usr.bin/compile_et usr.bin/compress usr.bin/cpio usr.bin/cpuset usr.bin/csplit usr.bin/csup usr.bin/ctags usr.bin/cut usr.bin/diff usr.bin/dig usr.bin/dirname usr.bin/du usr.bin/ee usr.bin/elf2aout usr.bin/elfdump usr.bin/enigma usr.bin/env usr.bin/expand usr.bin/false usr.bin/fetch usr.bin/file usr.bin/file2c usr.bin/find usr.bin/finger usr.bin/fmt usr.bin/fold usr.bin/from usr.bin/fstat usr.bin/fsync usr.bin/ftp usr.bin/gcore usr.bin/gencat usr.bin/getconf usr.bin/getent usr.bin/getopt usr.bin/gprof usr.bin/grep usr.bin/gzip usr.bin/head usr.bin/hesinfo usr.bin/hexdump usr.bin/host usr.bin/id usr.bin/indent usr.bin/ipcrm usr.bin/ipcs usr.bin/join usr.bin/jot usr.bin/kdump usr.bin/keylogin usr.bin/keylogout usr.bin/killall usr.bin/ktrace usr.bin/ktrdump usr.bin/lam usr.bin/last usr.bin/lastcomm usr.bin/ldd usr.bin/leave usr.bin/less usr.bin/lessecho usr.bin/lesskey usr.bin/lex usr.bin/limits usr.bin/locale usr.bin/locate usr.bin/lock usr.bin/lockf usr.bin/logger usr.bin/login usr.bin/logins usr.bin/logname usr.bin/look usr.bin/lorder usr.bin/lsvfs usr.bin/m4 usr.bin/mail usr.bin/make usr.bin/makewhatis usr.bin/mesg usr.bin/minigzip usr.bin/ministat usr.bin/mkdep usr.bin/mkfifo usr.bin/mklocale usr.bin/mkstr usr.bin/mktemp usr.bin/mkuzip usr.bin/msgs usr.bin/mt usr.bin/nc usr.bin/ncal usr.bin/ncplist usr.bin/ncplogin usr.bin/netstat usr.bin/newgrp usr.bin/newkey usr.bin/nfsstat usr.bin/nice usr.bin/nl usr.bin/nohup usr.bin/nslookup usr.bin/nsupdate usr.bin/objformat usr.bin/opieinfo usr.bin/opiekey usr.bin/opiepasswd usr.bin/pagesize usr.bin/passwd usr.bin/paste usr.bin/pathchk usr.bin/pr usr.bin/printenv usr.bin/printf usr.bin/procstat usr.bin/quota usr.bin/renice usr.bin/rev usr.bin/rlogin usr.bin/rpcgen usr.bin/rpcgen_host usr.bin/rpcinfo usr.bin/rs usr.bin/rsh usr.bin/rup usr.bin/ruptime usr.bin/rusers usr.bin/rwall usr.bin/rwho usr.bin/script usr.bin/sed usr.bin/setchannel usr.bin/shar usr.bin/showmount usr.bin/smbutil usr.bin/sockstat usr.bin/split usr.bin/stat usr.bin/su usr.bin/systat usr.bin/tabs usr.bin/tail usr.bin/talk usr.bin/tar usr.bin/tcopy usr.bin/tee usr.bin/telnet usr.bin/tftp usr.bin/time usr.bin/timedef usr.bin/tip usr.bin/top usr.bin/touch usr.bin/tput usr.bin/tr usr.bin/true usr.bin/truncate usr.bin/truss usr.bin/tset usr.bin/tsort usr.bin/tty usr.bin/ul usr.bin/uname usr.bin/unexpand usr.bin/unifdef usr.bin/uniq usr.bin/units usr.bin/unvis usr.bin/unzip usr.bin/usbhidaction usr.bin/usbhidctl usr.bin/users usr.bin/uudecode usr.bin/uuencode usr.bin/vacation usr.bin/vgrind usr.bin/vi usr.bin/vis usr.bin/vmstat usr.bin/w usr.bin/wall usr.bin/wc usr.bin/what usr.bin/whereis usr.bin/which usr.bin/who usr.bin/whois usr.bin/window usr.bin/write usr.bin/xargs usr.bin/xinstall usr.bin/xlint usr.bin/xstr usr.bin/yacc usr.bin/yes usr.bin/ypcat usr.bin/ypmatch usr.bin/ypwhich
.if empty(D_INC_DONE:Musr.bin/alias)
D_INC_DONE+= usr.bin/alias
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/alias/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/alias/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/apply)
D_INC_DONE+= usr.bin/apply
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/apply/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/apply/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ar)
D_INC_DONE+= usr.bin/ar
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ar/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ar/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/asa)
D_INC_DONE+= usr.bin/asa
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/asa/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/asa/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/at)
D_INC_DONE+= usr.bin/at
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/at/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/at/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/atm)
D_INC_DONE+= usr.bin/atm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/atm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/atm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/awk)
D_INC_DONE+= usr.bin/awk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/awk/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/awk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/banner)
D_INC_DONE+= usr.bin/banner
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/banner/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/banner/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/basename)
D_INC_DONE+= usr.bin/basename
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/basename/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/basename/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/biff)
D_INC_DONE+= usr.bin/biff
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/biff/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/biff/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/bluetooth)
D_INC_DONE+= usr.bin/bluetooth
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/bluetooth/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/bluetooth/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/brandelf)
D_INC_DONE+= usr.bin/brandelf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/brandelf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/brandelf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/bsdiff)
D_INC_DONE+= usr.bin/bsdiff
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/bsdiff/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/bsdiff/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/bzip2)
D_INC_DONE+= usr.bin/bzip2
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/bzip2/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/bzip2/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/bzip2recover)
D_INC_DONE+= usr.bin/bzip2recover
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/bzip2recover/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/bzip2recover/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/c89)
D_INC_DONE+= usr.bin/c89
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/c89/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/c89/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/c99)
D_INC_DONE+= usr.bin/c99
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/c99/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/c99/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/calendar)
D_INC_DONE+= usr.bin/calendar
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/calendar/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/calendar/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cap_mkdb)
D_INC_DONE+= usr.bin/cap_mkdb
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cap_mkdb/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cap_mkdb/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/catman)
D_INC_DONE+= usr.bin/catman
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/catman/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/catman/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/chat)
D_INC_DONE+= usr.bin/chat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/chat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/chat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/checknr)
D_INC_DONE+= usr.bin/checknr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/checknr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/checknr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/chkey)
D_INC_DONE+= usr.bin/chkey
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/chkey/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/chkey/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/chpass)
D_INC_DONE+= usr.bin/chpass
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/chpass/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/chpass/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cksum)
D_INC_DONE+= usr.bin/cksum
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cksum/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cksum/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cmp)
D_INC_DONE+= usr.bin/cmp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cmp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cmp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/col)
D_INC_DONE+= usr.bin/col
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/col/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/col/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/colcrt)
D_INC_DONE+= usr.bin/colcrt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/colcrt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/colcrt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/colldef)
D_INC_DONE+= usr.bin/colldef
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/colldef/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/colldef/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/colrm)
D_INC_DONE+= usr.bin/colrm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/colrm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/colrm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/column)
D_INC_DONE+= usr.bin/column
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/column/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/column/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/comm)
D_INC_DONE+= usr.bin/comm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/comm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/comm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/compile_et)
D_INC_DONE+= usr.bin/compile_et
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/compile_et/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/compile_et/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/compress)
D_INC_DONE+= usr.bin/compress
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/compress/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/compress/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cpio)
D_INC_DONE+= usr.bin/cpio
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cpio/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cpio/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cpuset)
D_INC_DONE+= usr.bin/cpuset
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cpuset/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cpuset/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/csplit)
D_INC_DONE+= usr.bin/csplit
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/csplit/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/csplit/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/csup)
D_INC_DONE+= usr.bin/csup
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/csup/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/csup/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ctags)
D_INC_DONE+= usr.bin/ctags
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ctags/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ctags/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/cut)
D_INC_DONE+= usr.bin/cut
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/cut/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/cut/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/diff)
D_INC_DONE+= usr.bin/diff
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/diff/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/diff/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/dig)
D_INC_DONE+= usr.bin/dig
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/dig/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/dig/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/dirname)
D_INC_DONE+= usr.bin/dirname
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/dirname/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/dirname/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/du)
D_INC_DONE+= usr.bin/du
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/du/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/du/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ee)
D_INC_DONE+= usr.bin/ee
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ee/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ee/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/elf2aout)
D_INC_DONE+= usr.bin/elf2aout
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/elf2aout/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/elf2aout/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/elfdump)
D_INC_DONE+= usr.bin/elfdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/elfdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/elfdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/enigma)
D_INC_DONE+= usr.bin/enigma
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/enigma/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/enigma/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/env)
D_INC_DONE+= usr.bin/env
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/env/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/env/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/expand)
D_INC_DONE+= usr.bin/expand
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/expand/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/expand/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/false)
D_INC_DONE+= usr.bin/false
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/false/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/false/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/fetch)
D_INC_DONE+= usr.bin/fetch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/fetch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/fetch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/file)
D_INC_DONE+= usr.bin/file
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/file/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/file/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/file2c)
D_INC_DONE+= usr.bin/file2c
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/file2c/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/file2c/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/find)
D_INC_DONE+= usr.bin/find
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/find/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/find/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/finger)
D_INC_DONE+= usr.bin/finger
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/finger/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/finger/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/fmt)
D_INC_DONE+= usr.bin/fmt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/fmt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/fmt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/fold)
D_INC_DONE+= usr.bin/fold
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/fold/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/fold/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/from)
D_INC_DONE+= usr.bin/from
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/from/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/from/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/fstat)
D_INC_DONE+= usr.bin/fstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/fstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/fstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/fsync)
D_INC_DONE+= usr.bin/fsync
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/fsync/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/fsync/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ftp)
D_INC_DONE+= usr.bin/ftp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ftp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ftp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/gcore)
D_INC_DONE+= usr.bin/gcore
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/gcore/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/gcore/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/gencat)
D_INC_DONE+= usr.bin/gencat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/gencat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/gencat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/getconf)
D_INC_DONE+= usr.bin/getconf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/getconf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/getconf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/getent)
D_INC_DONE+= usr.bin/getent
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/getent/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/getent/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/getopt)
D_INC_DONE+= usr.bin/getopt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/getopt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/getopt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/gprof)
D_INC_DONE+= usr.bin/gprof
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/gprof/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/gprof/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/grep)
D_INC_DONE+= usr.bin/grep
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/grep/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/grep/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/gzip)
D_INC_DONE+= usr.bin/gzip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/gzip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/gzip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/head)
D_INC_DONE+= usr.bin/head
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/head/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/head/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/hesinfo)
D_INC_DONE+= usr.bin/hesinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/hesinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/hesinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/hexdump)
D_INC_DONE+= usr.bin/hexdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/hexdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/hexdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/host)
D_INC_DONE+= usr.bin/host
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/host/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/host/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/id)
D_INC_DONE+= usr.bin/id
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/id/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/id/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/indent)
D_INC_DONE+= usr.bin/indent
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/indent/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/indent/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ipcrm)
D_INC_DONE+= usr.bin/ipcrm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ipcrm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ipcrm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ipcs)
D_INC_DONE+= usr.bin/ipcs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ipcs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ipcs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/join)
D_INC_DONE+= usr.bin/join
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/join/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/join/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/jot)
D_INC_DONE+= usr.bin/jot
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/jot/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/jot/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/kdump)
D_INC_DONE+= usr.bin/kdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/kdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/kdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/keylogin)
D_INC_DONE+= usr.bin/keylogin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/keylogin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/keylogin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/keylogout)
D_INC_DONE+= usr.bin/keylogout
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/keylogout/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/keylogout/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/killall)
D_INC_DONE+= usr.bin/killall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/killall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/killall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ktrace)
D_INC_DONE+= usr.bin/ktrace
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ktrace/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ktrace/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ktrdump)
D_INC_DONE+= usr.bin/ktrdump
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ktrdump/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ktrdump/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lam)
D_INC_DONE+= usr.bin/lam
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lam/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lam/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/last)
D_INC_DONE+= usr.bin/last
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/last/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/last/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lastcomm)
D_INC_DONE+= usr.bin/lastcomm
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lastcomm/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lastcomm/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ldd)
D_INC_DONE+= usr.bin/ldd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ldd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ldd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/leave)
D_INC_DONE+= usr.bin/leave
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/leave/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/leave/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/less)
D_INC_DONE+= usr.bin/less
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/less/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/less/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lessecho)
D_INC_DONE+= usr.bin/lessecho
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lessecho/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lessecho/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lesskey)
D_INC_DONE+= usr.bin/lesskey
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lesskey/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lesskey/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lex)
D_INC_DONE+= usr.bin/lex
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lex/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lex/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/limits)
D_INC_DONE+= usr.bin/limits
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/limits/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/limits/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/locale)
D_INC_DONE+= usr.bin/locale
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/locale/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/locale/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/locate)
D_INC_DONE+= usr.bin/locate
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/locate/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/locate/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lock)
D_INC_DONE+= usr.bin/lock
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lock/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lock/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lockf)
D_INC_DONE+= usr.bin/lockf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lockf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lockf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/logger)
D_INC_DONE+= usr.bin/logger
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/logger/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/logger/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/login)
D_INC_DONE+= usr.bin/login
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/login/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/login/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/logins)
D_INC_DONE+= usr.bin/logins
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/logins/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/logins/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/logname)
D_INC_DONE+= usr.bin/logname
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/logname/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/logname/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/look)
D_INC_DONE+= usr.bin/look
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/look/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/look/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lorder)
D_INC_DONE+= usr.bin/lorder
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lorder/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lorder/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/lsvfs)
D_INC_DONE+= usr.bin/lsvfs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/lsvfs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/lsvfs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/m4)
D_INC_DONE+= usr.bin/m4
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/m4/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/m4/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mail)
D_INC_DONE+= usr.bin/mail
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mail/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mail/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/make)
D_INC_DONE+= usr.bin/make
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/make/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/make/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/makewhatis)
D_INC_DONE+= usr.bin/makewhatis
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/makewhatis/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/makewhatis/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mesg)
D_INC_DONE+= usr.bin/mesg
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mesg/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mesg/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/minigzip)
D_INC_DONE+= usr.bin/minigzip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/minigzip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/minigzip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ministat)
D_INC_DONE+= usr.bin/ministat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ministat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ministat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mkdep)
D_INC_DONE+= usr.bin/mkdep
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mkdep/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mkdep/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mkfifo)
D_INC_DONE+= usr.bin/mkfifo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mkfifo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mkfifo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mklocale)
D_INC_DONE+= usr.bin/mklocale
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mklocale/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mklocale/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mkstr)
D_INC_DONE+= usr.bin/mkstr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mkstr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mkstr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mktemp)
D_INC_DONE+= usr.bin/mktemp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mktemp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mktemp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mkuzip)
D_INC_DONE+= usr.bin/mkuzip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mkuzip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mkuzip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/msgs)
D_INC_DONE+= usr.bin/msgs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/msgs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/msgs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/mt)
D_INC_DONE+= usr.bin/mt
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/mt/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/mt/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nc)
D_INC_DONE+= usr.bin/nc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nc/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ncal)
D_INC_DONE+= usr.bin/ncal
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ncal/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ncal/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ncplist)
D_INC_DONE+= usr.bin/ncplist
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ncplist/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ncplist/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ncplogin)
D_INC_DONE+= usr.bin/ncplogin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ncplogin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ncplogin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/netstat)
D_INC_DONE+= usr.bin/netstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/netstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/netstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/newgrp)
D_INC_DONE+= usr.bin/newgrp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/newgrp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/newgrp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/newkey)
D_INC_DONE+= usr.bin/newkey
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/newkey/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/newkey/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nfsstat)
D_INC_DONE+= usr.bin/nfsstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nfsstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nfsstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nice)
D_INC_DONE+= usr.bin/nice
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nice/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nice/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nl)
D_INC_DONE+= usr.bin/nl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nohup)
D_INC_DONE+= usr.bin/nohup
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nohup/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nohup/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nslookup)
D_INC_DONE+= usr.bin/nslookup
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nslookup/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nslookup/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/nsupdate)
D_INC_DONE+= usr.bin/nsupdate
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/nsupdate/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/nsupdate/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/objformat)
D_INC_DONE+= usr.bin/objformat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/objformat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/objformat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/opieinfo)
D_INC_DONE+= usr.bin/opieinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/opieinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/opieinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/opiekey)
D_INC_DONE+= usr.bin/opiekey
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/opiekey/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/opiekey/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/opiepasswd)
D_INC_DONE+= usr.bin/opiepasswd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/opiepasswd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/opiepasswd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/pagesize)
D_INC_DONE+= usr.bin/pagesize
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/pagesize/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/pagesize/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/passwd)
D_INC_DONE+= usr.bin/passwd
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/passwd/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/passwd/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/paste)
D_INC_DONE+= usr.bin/paste
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/paste/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/paste/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/pathchk)
D_INC_DONE+= usr.bin/pathchk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/pathchk/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/pathchk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/pr)
D_INC_DONE+= usr.bin/pr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/pr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/pr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/printenv)
D_INC_DONE+= usr.bin/printenv
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/printenv/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/printenv/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/printf)
D_INC_DONE+= usr.bin/printf
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/printf/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/printf/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/procstat)
D_INC_DONE+= usr.bin/procstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/procstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/procstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/quota)
D_INC_DONE+= usr.bin/quota
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/quota/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/quota/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/renice)
D_INC_DONE+= usr.bin/renice
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/renice/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/renice/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rev)
D_INC_DONE+= usr.bin/rev
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rev/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rev/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rlogin)
D_INC_DONE+= usr.bin/rlogin
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rlogin/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rlogin/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rpcgen)
D_INC_DONE+= usr.bin/rpcgen
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rpcgen/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rpcgen/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rpcgen_host)
D_INC_DONE+= usr.bin/rpcgen_host
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rpcgen_host/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rpcgen_host/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rpcinfo)
D_INC_DONE+= usr.bin/rpcinfo
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rpcinfo/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rpcinfo/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rs)
D_INC_DONE+= usr.bin/rs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rsh)
D_INC_DONE+= usr.bin/rsh
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rsh/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rsh/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rup)
D_INC_DONE+= usr.bin/rup
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rup/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rup/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ruptime)
D_INC_DONE+= usr.bin/ruptime
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ruptime/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ruptime/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rusers)
D_INC_DONE+= usr.bin/rusers
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rusers/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rusers/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rwall)
D_INC_DONE+= usr.bin/rwall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rwall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rwall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/rwho)
D_INC_DONE+= usr.bin/rwho
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/rwho/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/rwho/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/script)
D_INC_DONE+= usr.bin/script
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/script/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/script/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/sed)
D_INC_DONE+= usr.bin/sed
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/sed/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/sed/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/setchannel)
D_INC_DONE+= usr.bin/setchannel
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/setchannel/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/setchannel/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/shar)
D_INC_DONE+= usr.bin/shar
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/shar/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/shar/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/showmount)
D_INC_DONE+= usr.bin/showmount
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/showmount/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/showmount/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/smbutil)
D_INC_DONE+= usr.bin/smbutil
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/smbutil/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/smbutil/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/sockstat)
D_INC_DONE+= usr.bin/sockstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/sockstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/sockstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/split)
D_INC_DONE+= usr.bin/split
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/split/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/split/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/stat)
D_INC_DONE+= usr.bin/stat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/stat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/stat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/su)
D_INC_DONE+= usr.bin/su
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/su/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/su/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/systat)
D_INC_DONE+= usr.bin/systat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/systat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/systat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tabs)
D_INC_DONE+= usr.bin/tabs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tabs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tabs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tail)
D_INC_DONE+= usr.bin/tail
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tail/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tail/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/talk)
D_INC_DONE+= usr.bin/talk
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/talk/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/talk/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tar)
D_INC_DONE+= usr.bin/tar
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tar/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tar/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tcopy)
D_INC_DONE+= usr.bin/tcopy
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tcopy/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tcopy/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tee)
D_INC_DONE+= usr.bin/tee
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tee/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tee/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/telnet)
D_INC_DONE+= usr.bin/telnet
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/telnet/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/telnet/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tftp)
D_INC_DONE+= usr.bin/tftp
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tftp/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tftp/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/time)
D_INC_DONE+= usr.bin/time
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/time/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/time/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/timedef)
D_INC_DONE+= usr.bin/timedef
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/timedef/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/timedef/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tip)
D_INC_DONE+= usr.bin/tip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/top)
D_INC_DONE+= usr.bin/top
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/top/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/top/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/touch)
D_INC_DONE+= usr.bin/touch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/touch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/touch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tput)
D_INC_DONE+= usr.bin/tput
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tput/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tput/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tr)
D_INC_DONE+= usr.bin/tr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/true)
D_INC_DONE+= usr.bin/true
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/true/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/true/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/truncate)
D_INC_DONE+= usr.bin/truncate
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/truncate/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/truncate/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/truss)
D_INC_DONE+= usr.bin/truss
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/truss/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/truss/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tset)
D_INC_DONE+= usr.bin/tset
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tset/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tset/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tsort)
D_INC_DONE+= usr.bin/tsort
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tsort/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tsort/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/tty)
D_INC_DONE+= usr.bin/tty
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/tty/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/tty/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ul)
D_INC_DONE+= usr.bin/ul
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ul/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ul/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/uname)
D_INC_DONE+= usr.bin/uname
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/uname/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/uname/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/unexpand)
D_INC_DONE+= usr.bin/unexpand
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/unexpand/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/unexpand/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/unifdef)
D_INC_DONE+= usr.bin/unifdef
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/unifdef/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/unifdef/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/uniq)
D_INC_DONE+= usr.bin/uniq
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/uniq/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/uniq/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/units)
D_INC_DONE+= usr.bin/units
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/units/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/units/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/unvis)
D_INC_DONE+= usr.bin/unvis
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/unvis/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/unvis/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/unzip)
D_INC_DONE+= usr.bin/unzip
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/unzip/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/unzip/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/usbhidaction)
D_INC_DONE+= usr.bin/usbhidaction
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/usbhidaction/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/usbhidaction/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/usbhidctl)
D_INC_DONE+= usr.bin/usbhidctl
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/usbhidctl/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/usbhidctl/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/users)
D_INC_DONE+= usr.bin/users
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/users/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/users/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/uudecode)
D_INC_DONE+= usr.bin/uudecode
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/uudecode/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/uudecode/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/uuencode)
D_INC_DONE+= usr.bin/uuencode
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/uuencode/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/uuencode/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/vacation)
D_INC_DONE+= usr.bin/vacation
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/vacation/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/vacation/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/vgrind)
D_INC_DONE+= usr.bin/vgrind
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/vgrind/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/vgrind/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/vi)
D_INC_DONE+= usr.bin/vi
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/vi/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/vi/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/vis)
D_INC_DONE+= usr.bin/vis
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/vis/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/vis/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/vmstat)
D_INC_DONE+= usr.bin/vmstat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/vmstat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/vmstat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/w)
D_INC_DONE+= usr.bin/w
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/w/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/w/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/wall)
D_INC_DONE+= usr.bin/wall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/wall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/wall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/wc)
D_INC_DONE+= usr.bin/wc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/wc/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/wc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/what)
D_INC_DONE+= usr.bin/what
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/what/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/what/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/whereis)
D_INC_DONE+= usr.bin/whereis
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/whereis/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/whereis/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/which)
D_INC_DONE+= usr.bin/which
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/which/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/which/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/who)
D_INC_DONE+= usr.bin/who
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/who/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/who/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/whois)
D_INC_DONE+= usr.bin/whois
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/whois/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/whois/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/window)
D_INC_DONE+= usr.bin/window
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/window/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/window/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/write)
D_INC_DONE+= usr.bin/write
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/write/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/write/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/xargs)
D_INC_DONE+= usr.bin/xargs
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/xargs/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/xargs/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/xinstall)
D_INC_DONE+= usr.bin/xinstall
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/xinstall/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/xinstall/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/xlint)
D_INC_DONE+= usr.bin/xlint
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/xlint/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/xlint/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/xstr)
D_INC_DONE+= usr.bin/xstr
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/xstr/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/xstr/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/yacc)
D_INC_DONE+= usr.bin/yacc
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/yacc/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/yacc/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/yes)
D_INC_DONE+= usr.bin/yes
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/yes/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/yes/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ypcat)
D_INC_DONE+= usr.bin/ypcat
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ypcat/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ypcat/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ypmatch)
D_INC_DONE+= usr.bin/ypmatch
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ypmatch/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ypmatch/Buildfile.dirdep"
.endif
.endif

.if empty(D_INC_DONE:Musr.bin/ypwhich)
D_INC_DONE+= usr.bin/ypwhich
D_INC_DONE:= ${D_INC_DONE}
.if exists(${.SRCTOP}/usr.bin/ypwhich/Buildfile.dirdep)
.include "${.SRCTOP}/usr.bin/ypwhich/Buildfile.dirdep"
.endif
.endif

.endif

.for t in ${MACHINE_LIST}
D_TGTS_${t}=
.endfor

.if !defined(NODIRDEP)
_MACHINE_LIST:= ${MACHINE_LIST}
.if exists(${.SRCTOP}/usr.bin/alias/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/alias/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/apply/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/apply/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/asa/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/asa/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/at/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/at/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/atm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/atm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/awk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/awk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/banner/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/banner/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/basename/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/basename/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/biff/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/biff/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/bluetooth/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/bluetooth/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/brandelf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/brandelf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/bsdiff/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/bsdiff/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/bzip2/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/bzip2/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/bzip2recover/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/bzip2recover/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/c89/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/c89/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/c99/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/c99/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/calendar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/calendar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cap_mkdb/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cap_mkdb/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/catman/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/catman/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/chat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/chat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/checknr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/checknr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/chkey/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/chkey/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/chpass/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/chpass/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cksum/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cksum/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cmp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cmp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/col/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/col/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/colcrt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/colcrt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/colldef/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/colldef/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/colrm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/colrm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/column/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/column/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/comm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/comm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/compile_et/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/compile_et/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/compress/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/compress/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cpio/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cpio/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cpuset/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cpuset/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/csplit/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/csplit/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/csup/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/csup/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ctags/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ctags/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/cut/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/cut/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/diff/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/diff/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/dig/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/dig/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/dirname/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/dirname/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/du/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/du/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ee/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ee/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/elf2aout/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/elf2aout/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/elfdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/elfdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/enigma/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/enigma/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/env/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/env/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/expand/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/expand/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/false/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/false/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/fetch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/fetch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/file/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/file/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/file2c/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/file2c/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/find/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/find/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/finger/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/finger/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/fmt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/fmt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/fold/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/fold/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/from/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/from/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/fstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/fstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/fsync/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/fsync/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ftp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ftp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/gcore/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/gcore/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/gencat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/gencat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/getconf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/getconf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/getent/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/getent/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/getopt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/getopt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/gprof/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/gprof/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/grep/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/grep/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/gzip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/gzip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/head/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/head/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/hesinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/hesinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/hexdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/hexdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/host/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/host/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/id/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/id/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/indent/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/indent/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ipcrm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ipcrm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ipcs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ipcs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/join/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/join/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/jot/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/jot/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/kdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/kdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/keylogin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/keylogin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/keylogout/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/keylogout/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/killall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/killall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ktrace/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ktrace/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ktrdump/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ktrdump/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lam/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lam/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/last/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/last/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lastcomm/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lastcomm/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ldd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ldd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/leave/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/leave/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/less/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/less/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lessecho/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lessecho/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lesskey/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lesskey/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lex/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lex/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/limits/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/limits/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/locale/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/locale/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/locate/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/locate/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lock/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lock/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lockf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lockf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/logger/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/logger/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/login/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/login/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/logins/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/logins/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/logname/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/logname/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/look/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/look/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lorder/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lorder/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/lsvfs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/lsvfs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/m4/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/m4/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mail/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mail/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/make/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/make/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/makewhatis/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/makewhatis/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mesg/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mesg/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/minigzip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/minigzip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ministat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ministat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mkdep/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mkdep/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mkfifo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mkfifo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mklocale/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mklocale/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mkstr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mkstr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mktemp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mktemp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mkuzip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mkuzip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/msgs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/msgs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/mt/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/mt/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ncal/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ncal/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ncplist/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ncplist/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ncplogin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ncplogin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/netstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/netstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/newgrp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/newgrp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/newkey/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/newkey/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nfsstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nfsstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nice/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nice/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nohup/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nohup/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nslookup/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nslookup/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/nsupdate/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/nsupdate/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/objformat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/objformat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/opieinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/opieinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/opiekey/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/opiekey/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/opiepasswd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/opiepasswd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/pagesize/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/pagesize/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/passwd/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/passwd/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/paste/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/paste/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/pathchk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/pathchk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/pr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/pr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/printenv/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/printenv/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/printf/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/printf/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/procstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/procstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/quota/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/quota/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/renice/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/renice/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rev/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rev/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rlogin/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rlogin/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rpcgen/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rpcgen/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rpcgen_host/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rpcgen_host/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rpcinfo/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rpcinfo/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rsh/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rsh/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rup/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rup/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ruptime/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ruptime/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rusers/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rusers/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rwall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rwall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/rwho/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/rwho/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/script/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/script/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/sed/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/sed/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/setchannel/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/setchannel/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/shar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/shar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/showmount/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/showmount/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/smbutil/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/smbutil/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/sockstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/sockstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/split/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/split/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/stat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/stat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/su/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/su/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/systat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/systat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tabs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tabs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tail/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tail/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/talk/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/talk/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tar/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tar/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tcopy/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tcopy/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tee/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tee/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/telnet/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/telnet/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tftp/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tftp/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/time/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/time/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/timedef/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/timedef/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/top/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/top/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/touch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/touch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tput/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tput/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/true/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/true/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/truncate/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/truncate/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/truss/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/truss/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tset/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tset/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tsort/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tsort/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/tty/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/tty/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ul/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ul/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/uname/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/uname/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/unexpand/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/unexpand/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/unifdef/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/unifdef/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/uniq/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/uniq/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/units/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/units/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/unvis/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/unvis/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/unzip/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/unzip/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/usbhidaction/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/usbhidaction/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/usbhidctl/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/usbhidctl/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/users/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/users/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/uudecode/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/uudecode/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/uuencode/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/uuencode/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/vacation/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/vacation/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/vgrind/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/vgrind/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/vi/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/vi/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/vis/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/vis/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/vmstat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/vmstat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/w/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/w/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/wall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/wall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/wc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/wc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/what/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/what/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/whereis/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/whereis/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/which/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/which/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/who/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/who/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/whois/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/whois/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/window/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/window/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/write/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/write/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/xargs/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/xargs/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/xinstall/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/xinstall/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/xlint/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/xlint/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/xstr/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/xstr/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/yacc/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/yacc/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/yes/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/yes/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ypcat/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ypcat/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ypmatch/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ypmatch/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif

.if exists(${.SRCTOP}/usr.bin/ypwhich/Buildfile.dirdep)
.for _t in ${_MACHINE_LIST}
D_TGTS_${_t}+= ${.OBJROOT}/${_t}/usr.bin/ypwhich/all
D_TGTS_${_t}:= ${D_TGTS_${_t}}
.endfor
.endif


.endif
.for t in ${MACHINE_LIST}
${.OBJROOT}/${t}/usr.bin/all : ${D_TGTS_${t}} .PHONY
	echo Checking ${.OBJROOT}/${t}/usr.bin
	cd ${.SRCTOP}/usr.bin && MACHINE=${t} ${MAKE} ${.MAKEFLAGS:NMACHINE=*:N-DALLMACHINES} all
.endfor
